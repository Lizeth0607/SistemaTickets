{"version":3,"sources":["AppBreadcrumb.js","AppTopbar.js","AppFooter.js","AppConfig.js","AppSubmenu.js","AppMenu.js","AppSearch.js","AppRightMenu.js","service/IndicadoresService.js","components/Indicadores.js","service/UsuariosService.js","components/Usuarios.js","service/EquiposService.js","service/EmpleadosDatosService.js","components/Equipos.js","service/CategoriasEquiposService.js","components/CategoriasEquipos.js","service/DiscosService.js","components/DiscosEquipos.js","service/MarcasService.js","components/Marcas.js","service/RamService.js","components/Ram.js","service/PantallasService.js","components/Pantallas.js","service/ServiciosService.js","service/EquiposDatosService.js","service/UsuariosDatosService.js","components/Servicios.js","service/EmpleadosService.js","service/SedesDatosService.js","service/UbicacionesDatosService.js","components/Empleados.js","service/RolesService.js","components/Roles.js","service/AplicacionesEquiposService.js","service/AplicacionesDatosService.js","components/AplicacionesEquipos.js","service/HistorialService.js","components/Historial.js","service/UbicacionesService.js","components/Ubicaciones.js","service/SedesService.js","components/Sedes.js","App.js","pages/Login.js","pages/Error.js","pages/NotFound.js","pages/Access.js","AppWrapper.js","i18n.js","index.js"],"names":["withRouter","props","pathname","useLocation","name","replace","routers","currentRouter","find","router","path","breadcrumb","label","AppTopbar","classNames","topbarNotificationMenuActive","topbarUserMenuActive","className","type","onClick","onMenuButtonClick","style","textTransform","onSearchClick","AppFooter","AppConfig","useState","logoColor","setLogoColor","menuThemes","color","componentTheme","componentThemes","changeColorScheme","e","onColorSchemeChange","scheme","value","changeStyleSheetUrl","changeLogo","id","from","element","document","getElementById","urlTokens","getAttribute","split","length","newURL","join","replaceLink","appLogoLink","mobileLogoLink","invoiceLogoLink","footerLogoLink","logoUrl","src","linkElement","href","isIE","setAttribute","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","addEventListener","remove","test","window","navigator","userAgent","componentThemesElement","map","theme","cursor","changeComponentTheme","title","menuThemesElement","colorScheme","onMenuThemeChange","changeMenuTheme","configClassName","configActive","event","onConfigButtonClick","preventDefault","onConfigClick","checked","menuMode","inputId","onChange","onMenuModeChange","htmlFor","inputStyle","onInputStyleChange","inputIid","rippleActive","onRippleChange","AppSubmenu","activeIndex","setActiveIndex","visible","item","isMobile","innerWidth","isSlim","useCallback","getLink","index","menuitemIconClassName","icon","content","items","commonLinkProps","class","disabled","to","target","command","originalEvent","root","onRootMenuitemClick","onMenuitemClick","onMenuItemClick","menuActive","onMenuItemMouseEnter","url","rel","exact","activeClassName","isMenuActive","mobileMenuActive","useEffect","transitionTimeout","enter","exit","i","separator","role","menuitemClassName","link","rootMenuItem","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","onMenuClick","model","active","AppSearch","searchInputEl","searchActive","onEnter","focus","ref","el","ReactDOM","findDOMNode","placeholder","onKeyDown","key","which","onSearchHide","AppRightMenu","amount","code","selectedAmount","setSelectedAmount","sidebarClassName","rightMenuActive","onRightMenuClick","backgroundColor","options","optionLabel","alt","width","IndicadoresService","pCriterio","oValor","trim","axios","get","then","response","data","pIndicadores","seleccionaUrl","idInd","post","delete","eliminaUrl","headers","put","actualizaUrl","Indicadores","text","confirmButtonText","timer","mensaje","setMensaje","lstIndicadores","setLstIndicadores","dlgIndicadores","setDlgIndicadores","nombreInd","unidad_medida","categoria","setIndicadores","txtCriterio","setTxtCriterio","t","useTranslation","captura","setCaptura","indicadoresService","selectedUM","setSelectedUM","selectedCategoria","setSelectedCategoria","indicadoresSuccess","severidad","cabecero","detalle","mensajeCopy","Object","assign","Swal","fire","obtenerIndicador","seleccionaIndicador","pIndicador","formik","resetForm","updateProperty","propiedad","valor","indicadorCopy","iniciaComponentes","useFormik","initialValues","validate","errors","txtNombreInd","onSubmit","agregaIndicador","actualizaIndicador","rightFooter","tooltip","eliminaIndicador","handleSubmit","dlgFooter","right","Trans","i18nKey","paginator","rows","responsive","field","header","sortable","body","rowData","column","footer","modal","onHide","blockScroll","maxLength","UsuariosService","pUsuario","idUsuario","Usuarios","lstUsuarios","setLstUsuarios","dlgUsuarios","setDlgUsuarios","nombreUsu","cveUsuario","rolUsu","setUsuarios","usuariosService","selectedRol","setSelectedRol","usuariosSuccess","obtenerUsuario","seleccionaUsuario","txtIdUsuario","agregaUsuario","actualizaUsuario","eliminaUsuario","txtNombreUsu","txtCveUsuario","EquiposService","res","pEquipos","idEquipo","console","log","params","URLSearchParams","append","nombre","serial","ip_equipo","licencia","fecha_compra","marca_id","categoria_id","ram_id","disco_id","pantalla_id","empleado_id","equipo_id","EmpleadosDatosService","fetch","json","d","Equipos","lstEquipos","setLstEquipos","dlgEquipos","setDlgEquipos","setEquipos","equiposService","setempleados","empleadosServide","Array","_","getEmpleados","equiposSuccess","obtenerEquipo","eliminaEquipo","equipoCopy","agregaEquipo","actualizaEquipo","seleccionaEquipo","txtIdEquipo","txtNombreEquipo","txtSerialEquipo","txtIPEquipo","txtLicenciaEquipo","txtMarcaEquipo","txtCatEquipo","txtRamEquipo","txtDiscoEquipo","txtPantallaEquipo","txtEmpleadoEquipo","CategoriasService","pCategorias","descripcion","idCategoria","Categorias","lstCategorias","setLstCategorias","dlgCategorias","setDlgCategorias","setCategorias","categoriasService","CategoriasEquiposService","categoriasSuccess","setValue1","obtenerCategoria","eliminaCategoria","pCategoria","categoriaCopy","txtnombre","agregaCategoria","actualizaCategoria","seleccionaCategoria","cols","DiscosService","pDiscos","idDisco","tipo","capacidad","medida","DiscosEquipos","lstDiscos","setLstDiscos","dlgDiscos","setDlgDiscos","Discos","setDiscos","discosService","discosSuccess","obtenerDisco","eliminaDisco","discoCopy","txtTipoDisco","agregaDisco","actualizaDisco","seleccionaDisco","placeholer","txtCapacidadDisco","txtMedidaDisco","MarcasService","pMarcas","idMarca","Marcas","lstMarcas","setLstMarcas","dlgMarcas","setDlgMarcas","setMarcas","marcasService","marcasSuccess","obtenerMarca","eliminaMarca","txtNombreMarca","agregaMarca","actualizaMarca","seleccionaMarca","marcaCopy","RamService","pRam","idRam","Ram","lstRam","setLstRam","dlgRam","setDlgRam","setRam","ramService","ramSuccess","obtenerRam","eliminaRam","ramCopy","txtTipoRam","agregaRam","actualizaRam","seleccionaRam","txtCapacidadRam","txtmedidaRam","PantallasService","pPantallas","idPantalla","tamano","Pantallas","lstPantallas","setLstPantallas","dlgPantallas","setDlgPantallas","setPantallas","pantallasService","pantallasSuccess","obtenerPantalla","eliminaPantalla","pantallaCopy","agregaPantalla","actualizaPantalla","seleccionaPantalla","txtTipoPantalla","txtTamPantalla","ServiciosService","pServicios","idServicio","servicio","prioridad","estado","fecha_solicitud","fecha_termino","usuario_id","servicio_id","EquiposDatosService","UsuariosDatosService","Servicios","equiposDatosService","getEquipos","setEmpleados","empleadosDatosService","usuariosDatosService","getUsuarios","lstServicios","setLstServicios","dlgServicios","setDlgServicios","setServicios","serviciosService","serviciosSuccess","obtenerServicio","eliminaServicio","servicioCopy","txtNombreServicio","agregaServicio","actualizaServicio","seleccionaServicio","autoResize","txtPrioridadServicio","txtEstadoServicio","EmpleadosService","pEmpleados","idEmpleado","telefono","mail","puesto","imagen","ubicacion_id","sede_id","SedesDatosService","UnicacionesDatosService","Empleados","lstEmpleados","setLstEmpleados","dlgEmpleados","setDlgEmpleados","empleadosService","useRef","setUbicaciones","ubicacionesDatosService","UbicacionesDatosService","getUbicaciones","setSedes","sedesDatosService","getSedes","empleadosSuccess","obtenerEmpleado","eliminaEmpleado","empleadoCopy","txtNombreEmpleado","agregaEmpleado","actualizaEmpleado","seleccionaEmpleado","txtCorreoEmpleado","txtPuestoEmpleado","RolesService","pRoles","idRol","rol_id","Roles","lstRoles","setLstRoles","dlgRoles","setDlgRoles","nombreRol","setRoles","rolesService","rolesSuccess","obtenerRol","eliminaRol","txtNombreRol","agregaRol","actualizaRol","seleccionaRol","rolCopy","AplicacionesEquiposService","pAplicacionEqs","instalacion_id","fecha_instalacion","aplicacion_id","AplicacionesDatosService","AplicacionesEquipos","lstAplicacionesEqs","setLstAplicacionesEqs","dlgAplicacionesEqs","setDlgAplicacionesEqs","AplicacionesEqs","setAplicacionesEqs","aplicacionesEqsService","setAplicaciones","aplicacionesDatosService","getAplicacionesEqs","aplicacionesEqsSuccess","obtenerAplicacionEq","seleccionaAplicacionEq","pAplicacionEq","aplicacionesEqsCopy","agregaAplicacionEq","actualizaAplicacionEq","eliminaAplicacionEq","mask","txtfecha_instalacion","HistorialService","pHistorial","historial_id","mov_id","Historiales","lstHistoriales","setLstHistoriales","dlgHistoriales","setDlgHistoriales","setHistoriales","historialService","historialSuccess","obtenerHistorial","eliminaHistorial","historialCopy","txtIdMov","agregaHistorial","actualizaHistorial","seleccionaHistorial","UbicacionesService","pUbicaciones","Ubicaciones","lstUbicaciones","setLstUbicaciones","dlgUbicaciones","setDlgUbicaciones","ubicacionesService","ubicacionesSuccess","obtenerUbicacion","eliminaUbicacion","txtNombreUbicacion","agregaUbicacion","actualizaUbicacion","seleccionaUbicacion","ubicacionCopy","SedesService","pSedes","Sedes","lstSedes","setLstSedes","dlgSedes","setDlgSedes","sedesService","sedesSuccess","obtenerSede","eliminaSede","txtNombreSede","agregaSede","actualizaSede","sedeCopy","App","setMenuActive","setMenuMode","setColorScheme","menuTheme","setMenuTheme","overlayMenuActive","setOverlayMenuActive","staticMenuDesktopInactive","setStaticMenuDesktopInactive","staticMenuMobileActive","setStaticMenuMobileActive","setSearchActive","setTopbarUserMenuActive","setTopbarNotificationMenuActive","setRightMenuActive","setConfigActive","setInputStyle","ripple","setRipple","menuClick","searchClick","userMenuClick","notificationMenuClick","rightMenuClick","configClick","component","meta","parent","CategoriasEquipos","Historial","blockBodyScroll","unblockBodyScroll","onRightMenuButtonClick","prevRightMenuActive","hideOverlayMenu","classList","add","RegExp","isOverlay","isDesktop","containerClassName","data-theme","prevOverlayMenuActive","prevStaticMenuDesktopInactive","prevStaticMenuMobileActive","prevSearchActive","onTopbarNotification","prevTopbarNotificationMenuActive","onTopbarUserMenu","prevTopbarUserMenuActive","prevMenuActive","prevConfigActive","PrimeReact","Login","Error","NotFound","Access","location","scrollTo","i18n","use","Backend","initReactI18next","init","debug","react","useSuspense","lng","fallbackLng","whitelist","interpolation","escapeValue","backend","loadPath","render"],"mappings":"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","file":"static/js/main.4417ff3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\n\r\nconst AppBreadcrumb = (props) => {\r\n\r\n    const location = useLocation();\r\n    const pathname = location.pathname;\r\n\r\n    let name = pathname.replace('/', '');\r\n    if (props.routers) {\r\n        let currentRouter = props.routers.find(router => router.path === pathname);\r\n        name = currentRouter ? currentRouter['meta'].breadcrumb[0].label : name;\r\n    }\r\n\r\n    return <span>{name}</span>;\r\n}\r\n\r\nexport default withRouter(AppBreadcrumb);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport AppBreadcrumb from './AppBreadcrumb';\r\n\r\nconst AppTopbar = (props) => {\r\n\r\n    const notificationsItemClassName = classNames('notifications-item', { 'active-menuitem': props.topbarNotificationMenuActive });\r\n    const profileItemClassName = classNames('profile-item', { 'active-menuitem fadeInDown': props.topbarUserMenuActive });\r\n\r\n    return (\r\n        <div className=\"layout-topbar\">\r\n            <div className=\"topbar-left\">\r\n                <button type=\"button\" className=\"menu-button p-link\" onClick={props.onMenuButtonClick}>\r\n                    <i className=\"pi pi-chevron-left\"></i>\r\n                </button>\r\n                <span className=\"topbar-separator\"></span>\r\n\r\n                <div className=\"layout-breadcrumb viewname\" style={{ textTransform: 'uppercase' }}>\r\n                    <AppBreadcrumb routers={props.routers} />\r\n                </div>\r\n               \r\n            </div>\r\n\r\n            <div className=\"topbar-right\">\r\n                <ul className=\"topbar-menu\">\r\n                    <li className=\"search-item\">\r\n                        <button type=\"button\" className=\"p-link\" onClick={props.onSearchClick}>\r\n                            <i className=\"pi pi-search\"></i>\r\n                        </button>\r\n                    </li>\r\n                   {/* <li className={notificationsItemClassName}>\r\n                        <button type=\"button\" className=\"p-link\" onClick={props.onTopbarNotification}>\r\n                            <i className=\"pi pi-bell\"></i>\r\n                            <span className=\"topbar-badge\">5</span>\r\n                        </button>\r\n                        <ul className=\"notifications-menu fade-in-up\">\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\" tabIndex=\"0\">\r\n                                    <i className=\"pi pi-shopping-cart\"></i>\r\n                                    <div className=\"notification-item\">\r\n                                        <div className=\"notification-summary\">New Order</div>\r\n                                        <div className=\"notification-detail\">You have <strong>3</strong> new orders.</div>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-check-square\"></i>\r\n                                    <div className=\"notification-item\">\r\n                                        <div className=\"notification-summary\">Withdrawn Completed</div>\r\n                                        <div className=\"notification-detail\">Funds are on their way.</div>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-chart-line\"></i>\r\n                                    <div className=\"notification-item\">\r\n                                        <div className=\"notification-summary\">Monthly Reports</div>\r\n                                        <div className=\"notification-detail\">New reports are ready.</div>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-comments\"></i>\r\n                                    <div className=\"notification-item\">\r\n                                        <div className=\"notification-summary\">Comments</div>\r\n                                        <div className=\"notification-detail\"><strong>2</strong> new comments.</div>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                            <li role=\"menuitem\">\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-exclamation-circle\"></i>\r\n                                    <div className=\"notification-item\">\r\n                                        <div className=\"notification-summary\">Chargeback Request</div>\r\n                                        <div className=\"notification-detail\"><strong>1</strong> to review.</div>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </li> */}\r\n\r\n                 {/*\r\n                 <li className={profileItemClassName}>\r\n                        <button type=\"button\" className=\"p-link\" onClick={props.onTopbarUserMenu}>\r\n                            <img src=\"assets/demo/images/avatar/profile.jpg\" alt=\"diamond-layout\" className=\"profile-image\" />\r\n                            <span className=\"profile-name\">Amelia Stone</span>\r\n                        </button>\r\n                        <ul className=\"profile-menu fade-in-up\">\r\n                            <li>\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-user\"></i>\r\n                                    <span>Profile</span>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-cog\"></i>\r\n                                    <span>Settings</span>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-calendar\"></i>\r\n                                    <span>Calendar</span>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-inbox\"></i>\r\n                                    <span>Inbox</span>\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button type=\"button\" className=\"p-link\">\r\n                                    <i className=\"pi pi-power-off\"></i>\r\n                                    <span>Logout</span>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                 \r\n                 \r\n                 \r\n                 <li className=\"right-sidebar-item\">\r\n                        <button type=\"button\" className=\"p-link\" onClick={props.onRightMenuButtonClick}>\r\n                            <i className=\"pi pi-align-right\"></i>\r\n                        </button>\r\n                    </li>*/}   \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppTopbar;\r\n","import React from 'react';\r\n\r\nconst AppFooter = () => {\r\n\r\n    return (\r\n        <div className=\"layout-footer\">\r\n            <div className=\"footer-logo-container\">\r\n                <span className=\"app-name\">Adler Pelzer</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppFooter;\r\n","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputSwitch } from 'primereact/inputswitch';\r\n\r\nconst AppConfig = (props) => {\r\n\r\n    const [logoColor, setLogoColor] = useState('white');\r\n\r\n    const menuThemes = [\r\n        {\r\n            name: \"white\",\r\n            color: \"#ffffff\",\r\n            logoColor: \"dark\",\r\n            componentTheme: null,\r\n        },\r\n        {\r\n            name: \"darkgray\",\r\n            color: \"#343a40\",\r\n            logoColor: \"white\",\r\n            componentTheme: null,\r\n        },\r\n        {\r\n            name: \"blue\",\r\n            color: \"#1976d2\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"blue\",\r\n        },\r\n        {\r\n            name: \"bluegray\",\r\n            color: \"#455a64\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"lightgreen\",\r\n        },\r\n        {\r\n            name: \"brown\",\r\n            color: \"#5d4037\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"cyan\",\r\n        },\r\n        {\r\n            name: \"cyan\",\r\n            color: \"#0097a7\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"cyan\",\r\n        },\r\n        {\r\n            name: \"green\",\r\n            color: \"#388e3C\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"green\",\r\n        },\r\n        {\r\n            name: \"indigo\",\r\n            color: \"#303f9f\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"indigo\",\r\n        },\r\n        {\r\n            name: \"deeppurple\",\r\n            color: \"#512da8\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"deeppurple\",\r\n        },\r\n        {\r\n            name: \"orange\",\r\n            color: \"#F57c00\",\r\n            logoColor: \"dark\",\r\n            componentTheme: \"orange\",\r\n        },\r\n        {\r\n            name: \"pink\",\r\n            color: \"#c2185b\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"pink\",\r\n        },\r\n        {\r\n            name: \"purple\",\r\n            color: \"#7b1fa2\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"purple\",\r\n        },\r\n        {\r\n            name: \"teal\",\r\n            color: \"#00796b\",\r\n            logoColor: \"white\",\r\n            componentTheme: \"teal\",\r\n        },\r\n    ];\r\n\r\n    const componentThemes = [\r\n        { name: \"blue\", color: \"#42A5F5\" },\r\n        { name: \"green\", color: \"#66BB6A\" },\r\n        { name: \"lightgreen\", color: \"#9CCC65\" },\r\n        { name: \"purple\", color: \"#AB47BC\" },\r\n        { name: \"deeppurple\", color: \"#7E57C2\" },\r\n        { name: \"indigo\", color: \"#5C6BC0\" },\r\n        { name: \"orange\", color: \"#FFA726\" },\r\n        { name: \"cyan\", color: \"#26C6DA\" },\r\n        { name: \"pink\", color: \"#EC407A\" },\r\n        { name: \"teal\", color: \"#26A69A\" },\r\n    ];\r\n\r\n    const changeComponentTheme = (theme) => {\r\n        changeStyleSheetUrl('theme-css', theme, 3);\r\n    };\r\n\r\n    const onConfigButtonClick = (event) => {\r\n        props.onConfigButtonClick(event);\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changeMenuTheme = (name, logoColor, componentTheme) => {\r\n        props.onMenuThemeChange(name);\r\n        changeStyleSheetUrl('theme-css', componentTheme, 2);\r\n\r\n        const appLogoLink = document.getElementById('app-logo');\r\n        const appLogoUrl = `assets/layout/images/birbLogoFondoTransparente.png`;\r\n\r\n        if (appLogoLink) {\r\n            appLogoLink.src = appLogoUrl;\r\n        }\r\n        setLogoColor(logoColor);\r\n    };\r\n\r\n    const changeColorScheme = (e) => {\r\n        props.onColorSchemeChange(e);\r\n\r\n        const scheme = e.value;\r\n        changeStyleSheetUrl('layout-css', 'layout-' + scheme + '.css', 1);\r\n        changeStyleSheetUrl('theme-css', 'theme-' + scheme + '.css', 1);\r\n        changeLogo(scheme);\r\n    };\r\n\r\n    const changeStyleSheetUrl = (id, value, from) => {\r\n        const element = document.getElementById(id);\r\n        const urlTokens = element.getAttribute('href').split('/');\r\n\r\n        if (from === 1) {\r\n            // which function invoked this function\r\n            urlTokens[urlTokens.length - 1] = value;\r\n        } else if (from === 2) {\r\n            // which function invoked this function\r\n            if (value !== null) {\r\n                urlTokens[urlTokens.length - 2] = value;\r\n            }\r\n        } else if (from === 3) {\r\n            // which function invoked this function\r\n            urlTokens[urlTokens.length - 2] = value;\r\n        }\r\n\r\n        const newURL = urlTokens.join('/');\r\n\r\n        replaceLink(element, newURL);\r\n    };\r\n\r\n    const changeLogo = (scheme) => {\r\n        const appLogoLink = document.getElementById(\"app-logo\");\r\n        const mobileLogoLink = document.getElementById(\"logo-mobile\");\r\n        const invoiceLogoLink = document.getElementById(\"invoice-logo\");\r\n        const footerLogoLink = document.getElementById(\"footer-logo\");\r\n        const logoUrl = `assets/layout/images/birbLogoFondoTransparente.png`;\r\n\r\n        if (appLogoLink) {\r\n            appLogoLink.src = `assets/layout/images/logo-${scheme === 'light' ? logoColor : 'white'}.svg`;\r\n        }\r\n\r\n        if (mobileLogoLink) {\r\n            mobileLogoLink.src = logoUrl;\r\n        }\r\n\r\n        if (invoiceLogoLink) {\r\n            invoiceLogoLink.src = logoUrl;\r\n        }\r\n\r\n        if (footerLogoLink) {\r\n            footerLogoLink.src = logoUrl;\r\n        }\r\n    };\r\n\r\n    const replaceLink = (linkElement, href) => {\r\n        if (isIE()) {\r\n            linkElement.setAttribute(\"href\", href);\r\n        }\r\n        else {\r\n            const id = linkElement.getAttribute(\"id\");\r\n            const cloneLinkElement = linkElement.cloneNode(true);\r\n\r\n            cloneLinkElement.setAttribute(\"href\", href);\r\n            cloneLinkElement.setAttribute(\"id\", id + \"-clone\");\r\n\r\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n            cloneLinkElement.addEventListener(\"load\", () => {\r\n                linkElement.remove();\r\n                cloneLinkElement.setAttribute(\"id\", id);\r\n            });\r\n        }\r\n    };\r\n\r\n    const isIE = () => {\r\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent);\r\n    };\r\n\r\n    const getMenuThemes = () => {\r\n        if (props.colorScheme === 'light') {\r\n            return (\r\n                <div className=\"layout-themes\">\r\n                    {\r\n                        menuThemes.map(theme => {\r\n                            return (\r\n                                <div key={theme.name}>\r\n                                    <button type=\"button\" className=\"p-link\" style={{ cursor: 'pointer', 'backgroundColor': theme.color }} onClick={() => changeMenuTheme(theme.name, theme.logoColor, theme.componentTheme)} title={theme.name}></button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <p>Menu themes are only available in light mode by design as large surfaces can emit too much brightness in dark mode.</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const getComponentThemes = () => {\r\n        return (\r\n            <div className=\"layout-themes\">\r\n                {\r\n                    componentThemes.map(theme => {\r\n                        return (\r\n                            <div key={theme.name}>\r\n                                <button type=\"button\" className=\"p-link\" style={{ cursor: 'pointer', 'backgroundColor': theme.color }} onClick={() => changeComponentTheme(theme.name)} title={theme.name}></button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const componentThemesElement = getComponentThemes();\r\n    const menuThemesElement = getMenuThemes();\r\n    const configClassName = classNames('layout-config', { 'layout-config-active': props.configActive })\r\n    return (\r\n        <div id=\"layout-config\">\r\n            <button type=\"button\" id=\"layout-config-button\" className=\"layout-config-button p-link\" onClick={onConfigButtonClick}>\r\n                <i className=\"pi pi-cog\"></i>\r\n            </button>\r\n            <div className={configClassName} onClick={props.onConfigClick}>\r\n                <h5>Menu Type</h5>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton name=\"menuMode\" value=\"static\" checked={props.menuMode === 'static'} inputId=\"mode1\" onChange={props.onMenuModeChange}></RadioButton>\r\n                    <label htmlFor=\"mode1\">Static</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton name=\"menuMode\" value=\"overlay\" checked={props.menuMode === 'overlay'} inputId=\"mode2\" onChange={props.onMenuModeChange}></RadioButton>\r\n                    <label htmlFor=\"mode2\">Overlay</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton name=\"menuMode\" value=\"slim\" checked={props.menuMode === 'slim'} inputId=\"mode3\" onChange={props.onMenuModeChange}></RadioButton>\r\n                    <label htmlFor=\"mode3\">Slim</label>\r\n                </div>\r\n                <hr />\r\n\r\n                <h5>Color Scheme</h5>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton name=\"colorScheme\" value=\"dark\" checked={props.colorScheme === 'dark'} inputId=\"theme1\" onChange={changeColorScheme}></RadioButton>\r\n                    <label htmlFor=\"theme1\">Dark</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton name=\"colorScheme\" value=\"dim\" checked={props.colorScheme === 'dim'} inputId=\"theme2\" onChange={changeColorScheme}></RadioButton>\r\n                    <label htmlFor=\"theme2\">Dim</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton name=\"colorScheme\" value=\"light\" checked={props.colorScheme === 'light'} inputId=\"theme3\" onChange={changeColorScheme}></RadioButton>\r\n                    <label htmlFor=\"theme3\">Light</label>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <h5>Input Style</h5>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputId=\"input_outlined\" name=\"inputstyle\" value=\"outlined\" checked={props.inputStyle === 'outlined'} onChange={(e) => props.onInputStyleChange(e.value)} />\r\n                    <label htmlFor=\"input_outlined\">Outlined</label>\r\n                </div>\r\n                <div className=\"p-field-radiobutton\">\r\n                    <RadioButton inputIid=\"input_filled\" name=\"inputstyle\" value=\"filled\" checked={props.inputStyle === 'filled'} onChange={(e) => props.onInputStyleChange(e.value)} />\r\n                    <label htmlFor=\"input_filled\">Filled</label>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <h5>Ripple Effect</h5>\r\n                <InputSwitch checked={props.rippleActive} onChange={props.onRippleChange} />\r\n\r\n                <hr />\r\n\r\n                <h5>Menu Themes</h5>\r\n                {menuThemesElement}\r\n\r\n                <hr />\r\n\r\n                <h5>Component Themes</h5>\r\n                {componentThemesElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppConfig;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classNames from 'classnames';\r\nimport { Ripple } from 'primereact/ripple';\r\n\r\nconst AppSubmenu = (props) => {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n    const onMenuItemClick = (event, item, index) => {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        //execute command\r\n        if (item.command) {\r\n            item.command({ originalEvent: event, item: item });\r\n            event.preventDefault();\r\n        }\r\n        if (item.items) {\r\n            event.preventDefault();\r\n        }\r\n        if (props.root) {\r\n            props.onRootMenuitemClick({\r\n                originalEvent: event,\r\n            });\r\n        }\r\n        if (item.items) {\r\n            setActiveIndex(index === activeIndex ? null : index);\r\n        }\r\n\r\n        props.onMenuitemClick({\r\n            originalEvent: event,\r\n            item: item\r\n        });\r\n    };\r\n\r\n    const onMenuItemMouseEnter = (index) => {\r\n        if (props.root && props.menuActive && props.menuMode === \"slim\" && !isMobile()) {\r\n            setActiveIndex(index);\r\n        }\r\n    };\r\n\r\n    const visible = (item) => {\r\n        return typeof item.visible === \"function\" ? item.visible() : item.visible !== false;\r\n    };\r\n\r\n    const isMobile = () => {\r\n        return window.innerWidth <= 991;\r\n    };\r\n\r\n    const isSlim = useCallback(() => {\r\n        return props.menuMode === 'slim';\r\n    }, [props.menuMode])\r\n\r\n    const getLink = (item, index) => {\r\n        const menuitemIconClassName = classNames('layout-menuitem-icon', item.icon);\r\n        const content = (\r\n            <>\r\n                <i className={menuitemIconClassName}></i>\r\n                <span className=\"layout-menuitem-text\">{item.label}</span>\r\n                { item.items && <i className=\"pi pi-fw pi-angle-down layout-submenu-toggler\"></i>}\r\n                <Ripple />\r\n            </>\r\n        );\r\n        const commonLinkProps = {\r\n            'style': item.style,\r\n            'className': classNames(item.class, 'p-ripple', { 'p-disabled': item.disabled, 'p-link': !item.to }),\r\n            'target': item.target,\r\n            'onClick': (e) => onMenuItemClick(e, item, index),\r\n            'onMouseEnter': () => onMenuItemMouseEnter(index)\r\n        }\r\n\r\n        if (item.url) {\r\n            return <a href={item.url} rel=\"noopener noreferrer\" {...commonLinkProps}>{content}</a>\r\n        }\r\n        else if (!item.to) {\r\n            return <button type=\"button\" {...commonLinkProps}>{content}</button>\r\n        }\r\n\r\n        return <NavLink to={item.to} exact activeClassName=\"active-route\" {...commonLinkProps}>{content}</NavLink>;\r\n    };\r\n\r\n    const isMenuActive = (item, index) => {\r\n        return item.items && (props.root && (!isSlim() || (isSlim() && (props.mobileMenuActive || activeIndex !== null))) ? true : activeIndex === index);\r\n    }\r\n\r\n    const getItems = () => {\r\n        const transitionTimeout =  props.mobileMenuActive ? 0 : (isSlim() && props.root ? { enter: 400, exit: 400 } : (props.root ? 0 : { enter: 1000, exit: 450 }));\r\n        return props.items.map((item, i) => {\r\n            if (visible(item)) {\r\n                if (!item.separator) {\r\n                    const menuitemClassName = classNames({ 'layout-root-menuitem': props.root, 'active-menuitem': activeIndex === i && !item.disabled });\r\n                    const link = getLink(item, i);\r\n                    const rootMenuItem = props.root && (\r\n                        <div className=\"layout-root-menuitem\">\r\n                            <div className=\"layout-menuitem-root-text\" style={{ textTransform: 'uppercase' }}>{item.label}</div>\r\n                        </div>\r\n                    );\r\n\r\n                    return (\r\n                        <li key={item.label || i} className={menuitemClassName} role=\"menuitem\">\r\n                            {link}\r\n                            {rootMenuItem}\r\n                            <CSSTransition classNames=\"layout-menu\" timeout={transitionTimeout} in={isMenuActive(item, i)} unmountOnExit>\r\n                                <AppSubmenu items={visible(item) && item.items} menuActive={props.menuActive} menuMode={props.menuMode} parentMenuItemActive={activeIndex === i} onMenuitemClick={props.onMenuitemClick}></AppSubmenu>\r\n                            </CSSTransition>\r\n                        </li>\r\n                    )\r\n                }\r\n                else {\r\n                    return <li className=\"menu-separator\" style={item.style} key={`separator${i}`} role=\"separator\"></li>;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!props.menuActive && isSlim()) {\r\n            setActiveIndex(null);\r\n        }\r\n    }, [props.menuActive, isSlim]);\r\n\r\n    if (!props.items) {\r\n        return null;\r\n    }\r\n\r\n    const items = getItems();\r\n    return (\r\n        <ul className=\"layout-menu\" role=\"menu\">\r\n            {items}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default AppSubmenu;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppSubmenu from './AppSubmenu';\r\n\r\nconst AppMenu = (props) => {\r\n\r\n    return (\r\n        <div className=\"layout-sidebar\" onClick={props.onMenuClick}>\r\n            <Link to=\"/\" className=\"logo\">\r\n                <span className=\"app-name\">HPP Systems de México</span>\r\n            </Link>\r\n\r\n            <div className=\"layout-menu-container\">\r\n                <AppSubmenu items={props.model} menuMode={props.menuMode} parentMenuItemActive menuActive={props.active} mobileMenuActive={props.mobileMenuActive} root onMenuitemClick={props.onMenuitemClick} onRootMenuitemClick={props.onRootMenuitemClick} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nconst AppSearch = (props) => {\r\n\r\n    let searchInputEl = null;\r\n\r\n    const onInputKeydown = (event) => {\r\n        const key = event.which;\r\n\r\n        //escape, tab and enter\r\n        if (key === 27 || key === 9 || key === 13) {\r\n            props.onSearchHide(event);\r\n        }\r\n    };\r\n\r\n    const onEnter = () => {\r\n        if (searchInputEl) {\r\n            searchInputEl.focus();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"layout-search\">\r\n            <CSSTransition classNames=\"search-container\" timeout={{ enter: 400, exit: 400 }} in={props.searchActive} unmountOnExit onEnter={onEnter}>\r\n                <div className=\"search-container\" onClick={props.onSearchClick}>\r\n                    <i className=\"pi pi-search\"></i>\r\n                    <InputText ref={(el) => searchInputEl = ReactDOM.findDOMNode(el)} type=\"text\" name=\"search\" placeholder=\"Search\" onKeyDown={onInputKeydown} />\r\n                </div>\r\n            </CSSTransition>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppSearch;\r\n","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nconst AppRightMenu = (props) => {\r\n\r\n    const amount = [\r\n        {\r\n            label: \"*****24\",\r\n            value: { id: 1, name: \"*****24\", code: \"A1\" },\r\n        },\r\n        {\r\n            label: \"*****75\",\r\n            value: { id: 2, name: \"*****75\", code: \"A2\" },\r\n        },\r\n    ];\r\n\r\n    const [selectedAmount, setSelectedAmount] = useState(amount[0].value);\r\n\r\n    const sidebarClassName = classNames('layout-sidebar-right', {\r\n        'layout-sidebar-right-active': props.rightMenuActive\r\n    });\r\n\r\n    return (\r\n        <div className={sidebarClassName} onClick={props.onRightMenuClick}>\r\n            <h5>Activity</h5>\r\n            <div className=\"widget-timeline\">\r\n                <div className=\"timeline-event\">\r\n                    <span className=\"timeline-event-icon\" style={{ backgroundColor: '#64b5f6' }}>\r\n                        <i className=\"pi pi-dollar\"></i>\r\n                    </span>\r\n                    <div className=\"timeline-event-title\">New Sale</div>\r\n                    <div className=\"timeline-event-detail\">\r\n                        Richard Jones has purchased a blue t-shirt for\r\n                    <strong>$79</strong>.\r\n                </div>\r\n                </div>\r\n                <div className=\"timeline-event\">\r\n                    <span className=\"timeline-event-icon\" style={{ backgroundColor: '#7986cb' }}>\r\n                        <i className=\"timeline-icon pi pi-download\"></i>\r\n                    </span>\r\n                    <div className=\"timeline-event-title\">Withdrawal Initiated</div>\r\n                    <div className=\"timeline-event-detail\">Your request for withdrawal of <strong>$2500</strong> has been initiated.</div>\r\n                </div>\r\n                <div className=\"timeline-event\">\r\n                    <span className=\"timeline-event-icon\" style={{ backgroundColor: '#4db6ac' }}>\r\n                        <i className=\"timeline-icon pi pi-question\"></i>\r\n                    </span>\r\n                    <div className=\"timeline-event-title\">Question Received</div>\r\n                    <div className=\"timeline-event-detail\">Jane Davis has posted a <strong>new question</strong> about your product.</div>\r\n                </div>\r\n                <div className=\"timeline-event\">\r\n                    <span className=\"timeline-event-icon\" style={{ backgroundColor: '#4dd0e1' }}>\r\n                        <i className=\"timeline-icon pi pi-comment\"></i>\r\n                    </span>\r\n                    <div className=\"timeline-event-title\">Comment Received</div>\r\n                    <div className=\"timeline-event-detail\">Claire Smith has upvoted your store along with a<strong>comment</strong>.</div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <h5>Quick Withdraw</h5>\r\n\r\n            <div className=\"withdraw p-fluid\">\r\n                <div>\r\n                    <InputText type=\"text\" placeholder=\"Amount\" />\r\n                </div>\r\n                <div>\r\n                    <Dropdown options={amount} optionLabel=\"label\" value={selectedAmount} onChange={(e) => setSelectedAmount(e.value)}></Dropdown>\r\n                </div>\r\n                <div>\r\n                    <Button type=\"button\" label=\"Confirm\" icon=\"pi pi-check\"></Button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <h5>Shipment Tracking</h5>\r\n            <p>Track your ongoing shipments to customers.</p>\r\n            <img className=\"logo-image\" src=\"assets/demo/images/sidebar-right/staticmap.png\" alt=\"logo-shipment\" style={{ width: '100%' }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppRightMenu;\r\n","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  IndicadoresService {\r\n\r\nobtenerIndicador (pCriterio){\r\nlet buscaUrl = '/expediente/tblSentidosSentencias/buscaTblSentidosSentencias/';//Modificar\r\nlet oValor = pCriterio.trim() === '' ? '%20' : pCriterio.trim(); \r\nreturn axios.get(buscaUrl + oValor).then(response  =>  response.data);\r\n}\r\n\r\n\r\nseleccionaIndicador(pIndicadores) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pIndicadores.idInd).then(response  =>  response.data);\r\n}\r\n\r\nagregaIndicador (pIndicadores) {\r\nlet agregaUrl = '/expediente/tblSentidosSentencias/agregaTblSentidosSentencias';\r\nreturn axios.post(agregaUrl, pIndicadores).then(response  =>  response.data);\r\n}\r\n\r\neliminaIndicador (pIndicadores) {\r\nlet eliminaUrl = '/expediente/tblSentidosSentencias/eliminaTblSentidosSentencias'; //Modificar\r\naxios.delete(eliminaUrl  + '/' + pIndicadores.idInd, {\r\nheaders: {'Content-Type': 'application/json;charset=UTF-8'},\r\ndata: pIndicadores\r\n});\r\n\r\n}\r\n\r\nactualizaIndicador (pIndicadores) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pIndicadores.idInd,  pIndicadores)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport IndicadoresService from '../service/IndicadoresService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Indicadores = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstIndicadores, setLstIndicadores] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgIndicadores, setDlgIndicadores] = useState(false);\r\nconst [Indicadores, setIndicadores] = useState({idInd:null\r\n,nombreInd:''\r\n,unidad_medida:''\r\n,categoria:''\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Indicadores']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst indicadoresService = new IndicadoresService(); //MODIFICAR SERVICES\r\nconst [selectedUM, setSelectedUM] = useState(null);\r\nconst [selectedCategoria, setSelectedCategoria] = useState(null);\r\nconst unidad_med = [\r\n   { name: 'UnidadMedida1', code: '1' }\r\n];\r\nconst categorias = [\r\n   { name: 'Categoria1', code: '1' }\r\n];\r\nconst onUnidadMedChange = (e) => {\r\n   setSelectedUM(e.value);\r\n}\r\nconst onCategoriaChange = (e) => {\r\n   setSelectedCategoria(e.value);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst indicadoresSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n\r\nconst obtenerIndicador = ()   =>   { //MODIFICAR EN SERVICE\r\nindicadoresService.obtenerIndicador (txtCriterio).then(data => setLstIndicadores(data));\r\n};\r\n\r\nconst seleccionaIndicador = (pIndicador)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\nindicadoresService.seleccionaIndicador (pIndicador).then(data => setIndicadores(data));\r\nsetDlgIndicadores(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerIndicador();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaIndicador = ()   =>   {\r\nindicadoresService.agregaIndicador (Indicadores).\r\nthen(data => {setIndicadores(data);\r\nindicadoresSuccess('success',t('Indicadores:cabecero.exito'),t('Indicadores:mensaje.agregar'));\r\nsetDlgIndicadores(false);\r\nobtenerIndicador ();\r\n});\r\n};\r\n\r\nconst eliminaIndicador = ()   =>   {\r\nIndicadores.eliminaIndicador (Indicadores);\r\nindicadoresSuccess('success',t('Inidcadores:cabecero.exito'),t('Indicadores:mensaje.eliminar'));\r\nsetDlgIndicadores(false);\r\nobtenerIndicador();\r\nobtenerIndicador();\r\n};\r\n\r\nconst actualizaIndicador = ()   =>   {\r\nindicadoresService.actualizaIndicador (Indicadores).\r\nthen(data => { setDlgIndicadores(false); obtenerIndicador();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet indicadorCopy = Object.assign({}, Indicadores);\r\nindicadorCopy[propiedad] = valor;\r\nsetIndicadores(indicadorCopy);\r\n};\r\n\r\nconst iniciaIndicadores = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgIndicadores(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetIndicadores({idInd:null\r\n   ,nombreInd:''\r\n   ,unidad_medida:''\r\n   ,categoria:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades\r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Indicadores.nombreInd) {\r\nerrors.txtNombreInd= t('Indicadores:required.nombreInd');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaIndicador();\r\n} else{\r\nactualizaIndicador();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div><Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-rounded\" onClick={()  =>  {seleccionaIndicador(rowData);} }></Button><Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaIndicador(rowData); } }></Button></div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Indicadores:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgIndicadores(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Indicadores:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaIndicador }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Indicadores:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Indicadores:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Indicadores:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Indicadores:placeholder.nombreInd')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Indicadores:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaIndicadores}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstIndicadores} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"idInd\" header={t('Indicadores:label.idInd')} sortable={true}></Column>\r\n      <Column field=\"nombreInd\" header={t('Indicadores:label.nombreInd')} sortable={true}></Column>\r\n      <Column field=\"unidadMedida\" header={t('Indicadores:label.unidadMedida')} sortable={true}></Column>\r\n      <Column field=\"Categoria\" header={t('Indicadores:label.categoria')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Indicadores:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Indicadores:rotulo.agregar')} footer={dlgFooter} visible={dlgIndicadores} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgIndicadores(false)} blockScroll={false}>\r\n      { Indicadores  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtNombreInd\">\r\n                  {t('Indicadores:label.nombreInd')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtNombreInd\" placeholder={t('Indicadores:placeholder.nombreInd')} value={Indicadores.nombreInd} className={formik.errors.txtNombreInd ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombreInd', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtNombreInd\">indicadores.nombreInd</label>)}\r\n               \r\n               {formik.errors.txtNombreInd  &&  <small id=\"txtNombreInd-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtNombreInd}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtUniMed\">\r\n                  {t('Indicadores:label.unidadMedida')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <Dropdown value={selectedUM} options={unidad_med} onChange={onUnidadMedChange} optionLabel=\"name\" placeholder={t('Indicadores:placeholder.unidadMedida')} onChange={(e) =>   updateProperty('unidadMedida', e.target.value)}/>\r\n               ):(     <label id=\"txtUniMed\">indicadores.unidad_med</label>)}\r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtIndCateg\">\r\n                  {t('Indicadores:label.categoria')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <Dropdown value={selectedCategoria} options={categorias} onChange={onCategoriaChange} optionLabel=\"name\" placeholder={t('Indicadores:placeholder.categoria')} onChange={(e) =>   updateProperty('categoria', e.target.value)} />               \r\n                  ):(     <label id=\"txtIndCateg\">indicadores.categoria</label>)}\r\n               \r\n            </div>            \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Indicadores;                                        \t\r\n\r\n\r\n","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  UsuariosService {\r\n\r\nobtenerUsuario (pCriterio){\r\nlet buscaUrl = '/expediente/tblSentidosSentencias/buscaTblSentidosSentencias/';//Modificar\r\nlet oValor = pCriterio.trim() === '' ? '%20' : pCriterio.trim(); \r\nreturn axios.get(buscaUrl + oValor).then(response  =>  response.data);\r\n}\r\n\r\n\r\nseleccionaUsuario(pUsuario) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pUsuario.idUsuario).then(response  =>  response.data);\r\n}\r\n\r\nagregaUsuario (pUsuario) {\r\nlet agregaUrl = '/expediente/tblSentidosSentencias/agregaTblSentidosSentencias';\r\nreturn axios.post(agregaUrl, pUsuario).then(response  =>  response.data);\r\n}\r\n\r\neliminaUsuario (pUsuario) {\r\nlet eliminaUrl = '/expediente/tblSentidosSentencias/eliminaTblSentidosSentencias'; //Modificar\r\naxios.delete(eliminaUrl  + '/' + pUsuario.idUsuario, {\r\nheaders: {'Content-Type': 'application/json;charset=UTF-8'},\r\ndata: pUsuario\r\n});\r\n\r\n}\r\n\r\nactualizaUsuario (pUsuario) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pUsuario.idUsuario,  pUsuario)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport UsuariosService from '../service/UsuariosService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Usuarios = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstUsuarios, setLstUsuarios] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgUsuarios, setDlgUsuarios] = useState(false);\r\nconst [Usuarios, setUsuarios] = useState({idUsuario:null\r\n,nombreUsu:''\r\n,cveUsuario:''\r\n,rolUsu:''\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Usuarios']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst usuariosService = new UsuariosService(); //MODIFICAR SERVICES\r\n\r\nconst [selectedRol, setSelectedRol] = useState(null);\r\n\r\nconst roles = [\r\n   { name: 'Rol1', code: 'R1' },\r\n   { name: 'Rol2', code: 'R2' },\r\n   { name: 'Rol3', code: 'R3' },\r\n   { name: 'Rol4', code: 'R4' },\r\n   { name: 'Rol5', code: 'R5' }\r\n];\r\n\r\nconst onRolChange = (e) => {\r\n   setSelectedRol(e.value);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst usuariosSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n\r\nconst obtenerUsuario = ()   =>   { //MODIFICAR EN SERVICE\r\nusuariosService.obtenerUsuario (txtCriterio).then(data => setLstUsuarios(data));\r\n};\r\n\r\nconst seleccionaUsuario = (pUsuario)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\nusuariosService.seleccionaUsuario (pUsuario).then(data => setUsuarios(data));\r\nsetDlgUsuarios(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerUsuario();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaUsuario = ()   =>   {\r\nusuariosService.agregaUsuario (Usuarios).\r\nthen(data => {setUsuarios(data);\r\nusuariosSuccess('success',t('Usuarios:cabecero.exito'),t('Usuarios:mensaje.agregar'));\r\nsetDlgUsuarios(false);\r\nobtenerUsuario ();\r\n});\r\n};\r\n\r\nconst eliminaUsuario = ()   =>   {\r\nUsuarios.eliminaUsuario (Usuarios);\r\nusuariosSuccess('success',t('Usuarios:cabecero.exito'),t('Usuarios:mensaje.eliminar'));\r\nsetDlgUsuarios(false);\r\nobtenerUsuario();\r\nobtenerUsuario();\r\n};\r\n\r\nconst actualizaUsuario = ()   =>   {\r\nusuariosService.actualizaUsuario (Usuarios).\r\nthen(data => { setDlgUsuarios(false); obtenerUsuario();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet indicadorCopy = Object.assign({}, Usuarios);\r\nindicadorCopy[propiedad] = valor;\r\nsetUsuarios(indicadorCopy);\r\n};\r\n\r\nconst iniciaUsuarios = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgUsuarios(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetUsuarios({idUsuario:null\r\n   ,nombreUsu:''\r\n   ,cveUsuario:''\r\n   ,rolUsu:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Usuarios.idUsuario) {\r\nerrors.txtIdUsuario= t('Usuarios:required.idUsuario');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaUsuario();\r\n} else{\r\nactualizaUsuario();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div><Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-rounded\" onClick={()  =>  {seleccionaUsuario(rowData);} }></Button><Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaUsuario(rowData); } }></Button></div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Usuarios:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgUsuarios(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Usuarios:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaUsuario }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Usuarios:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Usuarios:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Usuarios:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Usuarios:placeholder.nombreUsu')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Usuarios:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaUsuarios}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstUsuarios} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"idUsuario\" header={t('Usuarios:label.idUsuario')} sortable={true}></Column>\r\n      <Column field=\"nombreUsu\" header={t('Usuarios:label.nombreUsu')} sortable={true}></Column>\r\n      <Column field=\"cveUsuario\" header={t('Usuarios:label.cveUsuario')} sortable={true}></Column>\r\n      <Column field=\"rolUsu\" header={t('Usuarios:label.rolUsu')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Usuarios:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Usuarios:rotulo.agregar')} footer={dlgFooter} visible={dlgUsuarios} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgUsuarios(false)} blockScroll={false}>\r\n      { Usuarios  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtNombreIdUsuario\">\r\n                  {t('Usuarios:label.idUsuario')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtidUsuario\" placeholder={t('Usuarios:placeholder.idUsuario')} value={Usuarios.idUsuario} className={formik.errors.txtIdUsuario ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('idUsuario', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtIdUsuario\">Usuarios.idUsuario</label>)}\r\n               \r\n               {formik.errors.txtIdUsuario  &&  <small id=\"txtIdUsuario-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtIdUsuario}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtActivo\">\r\n                  {t('Usuarios:label.nombreUsu')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtNombreUsu\" placeholder={t('Usuarios:placeholder.nombreUsu')} value={Usuarios.nombreUsu} className={formik.errors.txtNombreUsu ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombreUsu', e.target.value)}></InputText>    \r\n                  ):(     <label id=\"txtNombreUsu\">Usuarios.nombreUsu</label>)}\r\n                  \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtCveUsuario\">\r\n                  {t('Usuarios:label.cveUsuario')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtCveUsuario\" placeholder={t('Usuarios:placeholder.cveUsuario')} value={Usuarios.cveUsuario} className={formik.errors.txtCveUsuario ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('cveUsuario', e.target.value)}></InputText>    \r\n                  ):(     <label id=\"txtCveUsuario\">Usuarios.cveUsuario</label>)}\r\n                  \r\n            </div>\r\n            <div className=\"p-field p-col-6 p-md-6\"><label htmlFor=\"txtRolesUsu\">\r\n                  {t('Usuarios:label.rolUsu')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <Dropdown value={selectedRol} options={roles} onChange={onRolChange} optionLabel=\"name\" placeholder={t('Usuarios:placeholder.rolUsu')} onChange={(e) =>   updateProperty('rolUsu', e.target.value)} />               \r\n                  ):(     <label id=\"txtRolesUsu\">Usuarios.RolesUsu</label>)}\r\n               \r\n            </div>            \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Usuarios;                                        \t\r\n\r\n\r\n","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  EquiposService {\r\n\r\nobtenerEquipo (pCriterio){\r\n    return axios.get(\"https://backliz1.herokuapp.com/device\").then(res => res.data);\r\n\r\n}\r\n\r\n\r\nseleccionaEquipo(pEquipos) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pEquipos.idEquipo).then(response  =>  response.data);\r\n}\r\n\r\nagregaEquipo (pEquipos) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/device';\r\n    console.log(\"sasa\", pEquipos);\r\n    const params = new URLSearchParams()\r\n    //params.append('equipo_id',pEquipos.equipo_id)\r\n    params.append('nombre',pEquipos.nombre)\r\n    params.append('serial',pEquipos.serial)\r\n    params.append('ip_equipo',pEquipos.ip_equipo)\r\n    params.append('licencia',pEquipos.licencia)\r\n    params.append('fecha_compra',pEquipos.fecha_compra)\r\n    params.append('marca_id',pEquipos.marca_id)\r\n    params.append('categoria_id',pEquipos.categoria_id)\r\n    params.append('ram_id',pEquipos.ram_id)\r\n    params.append('disco_id',pEquipos.disco_id)\r\n    params.append('pantalla_id',pEquipos.pantalla_id)\r\n    params.append('empleado_id',pEquipos.empleado_id)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n    }\r\n\r\neliminaEquipo (pEquipos) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/device'; //Modificar\r\n    console.log(\"asda \",pEquipos.equipo_id);\r\n    return axios.delete(eliminaUrl + '/' + pEquipos.equipo_id);\r\n\r\n}\r\n\r\nactualizaEquipo (pEquipos) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pEquipos.idEquipo,  pEquipos)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","export default class EmpleadosDatosService {\r\n\r\n    getEmpleados() {\r\n        return fetch('data/empleados.json').then(res => res.json())\r\n            .then(d => d.data);\r\n    }\r\n}","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport EquiposService from '../service/EquiposService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\nimport  EmpleadosDatosService  from '../service/EmpleadosDatosService';\r\n\r\n\r\n\r\nconst Equipos = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstEquipos, setLstEquipos] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgEquipos, setDlgEquipos] = useState(false);\r\nconst [Equipos, setEquipos] = useState({equipo_id:null\r\n    ,nombre: ''\r\n    ,serial: ''\r\n    ,ip_equipo: ''\r\n    ,licencia: ''\r\n    ,fecha_compra: ''\r\n    ,marca_id: ''\r\n    ,categoria_id: ''\r\n    ,ram_id: ''\r\n    ,disco_id: ''\r\n    ,pantalla_id: ''\r\n    ,empleado_id: ''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Equipos']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst equiposService = new EquiposService(); //MODIFICAR SERVICES\r\nconst [selectedMarca, setSelectedMarca] = useState(null);\r\nconst [selectedCategoriaEquipo, setSelectedCategoriaEquipo] = useState(null);\r\nconst [selectedRam, setSelectedRam] = useState(null);\r\nconst [selectedDisco, setSelectedDisco] = useState(null);\r\nconst [selectedPantalla, setSelectedPantalla] = useState(null);\r\n\r\nconst marcas = [\r\n   { name: 'Marca1', code: '1' }\r\n];\r\nconst categoriasEquipo = [\r\n   { name: 'CategoriaEquipo1', code: '1' }\r\n];\r\nconst ram = [\r\n    { name: 'Ram1', code: '1' }\r\n ];\r\n const discos = [\r\n    { name: 'Disco1', code: '1' }\r\n ];\r\n const pantallas = [\r\n    { name: 'Pantalla1', code: '1' }\r\n ];\r\nconst onMarcaChange = (e) => {\r\n   setSelectedMarca(e.value);\r\n}\r\nconst onCategoriaEquipoChange = (e) => {\r\n   setSelectedCategoriaEquipo(e.value);\r\n}\r\nconst onRamChange = (e) => {\r\n    setSelectedRam(e.value);\r\n }\r\n const onDiscoChange = (e) => {\r\n    setSelectedDisco(e.value);\r\n }\r\n const onPantallaChange = (e) => {\r\n    setSelectedPantalla(e.value);\r\n }\r\n\r\n//Autocomplete\r\n\r\n\r\nconst [empleados, setempleados] = useState([]);\r\nconst [selectedCountry2, setSelectedCountry2] = useState(null);\r\nconst [selectedItem, setSelectedItem] = useState(null);\r\nconst [filteredempleados, setFilteredempleados] = useState(null);\r\nconst empleadosServide = new EmpleadosDatosService();\r\n\r\n\r\nconst items = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n\r\nuseEffect(() => {\r\n    empleadosServide.getEmpleados().then(data => setempleados(data));\r\n}, []); \r\n\r\nconst searchCountry = (event) => {\r\n    setTimeout(() => {\r\n        let _filteredempleados;\r\n        if (!event.query.trim().length) {\r\n            _filteredempleados = [...empleados];\r\n        }\r\n        else {\r\n            _filteredempleados = empleados.filter((country) => {\r\n                return country.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n            });\r\n        }\r\n\r\n        setFilteredempleados(_filteredempleados);\r\n    }, 250);\r\n}\r\n\r\n\r\n\r\n    \r\n\r\nconst itemTemplate = (item) => {\r\n    return (\r\n        <div className=\"country-item\">\r\n            <div>{item.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst equiposSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n\r\nconst obtenerEquipo = ()   =>   { //MODIFICAR EN SERVICE\r\nequiposService.obtenerEquipo ().then(data => setLstEquipos(data));\r\n};\r\n\r\nconst seleccionaEquipo = (pEquipos)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\nequiposService.seleccionaEquipo (pEquipos).then(data => setEquipos(data));\r\nsetDlgEquipos(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerEquipo();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaEquipo = ()   =>   {\r\nequiposService.agregaEquipo (Equipos).then(data => {setEquipos(data);\r\nequiposSuccess('success',t('Equipos:cabecero.exito'),t('Equipos:mensaje.agregar'));\r\nsetDlgEquipos(false);\r\nobtenerEquipo ();\r\n});\r\n};\r\n\r\nconst eliminaEquipo = (pEquipos)   =>   {\r\n   equiposService.eliminaEquipo (pEquipos).then(data => setEquipos(data));\r\nequiposSuccess('success',t('Equipos:cabecero.exito'),t('Equipos:mensaje.eliminar'));\r\nsetDlgEquipos(false);\r\nobtenerEquipo();\r\nobtenerEquipo();\r\n};\r\n\r\nconst actualizaEquipo = ()   =>   {\r\nequiposService.actualizaEquipo (Equipos).\r\nthen(data => { setDlgEquipos(false); obtenerEquipo();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet equipoCopy = Object.assign({}, Equipos);\r\nequipoCopy[propiedad] = valor;\r\nsetEquipos(equipoCopy);\r\n};\r\n\r\nconst iniciaEquipos = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgEquipos(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetEquipos({equipo_id:null\r\n    ,nombre: ''\r\n    ,serial: ''\r\n    ,ip_equipo: ''\r\n    ,licencia: ''\r\n    ,fecha_compra: ''\r\n    ,marca_id: ''\r\n    ,categoria_id: ''\r\n    ,ram_id: ''\r\n    ,disco_id: ''\r\n    ,pantalla_id: ''\r\n    ,empleado_id: ''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Equipos.equipo_id) {\r\nerrors.txtIdEquipo= t('Equipos:required.idEquipo');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\n//validate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaEquipo();\r\n} else{\r\nactualizaEquipo();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaEquipo(rowData);} }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaEquipo(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Equipos:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgEquipos(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Equipos:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaEquipo }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Equipos:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Equipos:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Equipos:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Equipos:placeholder.idEquipo')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Equipos:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaEquipos}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstEquipos} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"equipo_id\" header={t('Equipos:label.idEquipo')} sortable={true}></Column>\r\n      <Column field=\"nombre\" header={t('Equipos:label.nombreEquipo')} sortable={true}></Column>\r\n      <Column field=\"serial\" header={t('Equipos:label.serialEquipo')} sortable={true}></Column>\r\n      <Column field=\"ip_equipo\" header={t('Equipos:label.ipEquipo')} sortable={true}></Column>\r\n      <Column field=\"licencia\" header={t('Equipos:label.licenciaEquipo')} sortable={true}></Column>\r\n      <Column field=\"fecha_compra\" header={t('Equipos:label.fechaCompra')} sortable={true}></Column>\r\n      <Column field=\"marca_id\" header={t('Equipos:label.marcaEquipo')} sortable={true}></Column>\r\n      <Column field=\"categoria_id\" header={t('Equipos:label.categEquipo')} sortable={true}></Column>\r\n      <Column field=\"ram_id\" header={t('Equipos:label.ramEquipo')} sortable={true}></Column>\r\n      <Column field=\"disco_id\" header={t('Equipos:label.discoEquipo')} sortable={true}></Column>\r\n      <Column field=\"pantalla_id\" header={t('Equipos:label.pantallaEquipo')} sortable={true}></Column>\r\n      <Column field=\"empleado_id\" header={t('Equipos:label.empleadoEquipo')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Equipos:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Equipos:rotulo.agregar')} footer={dlgFooter} visible={dlgEquipos} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgEquipos(false)} blockScroll={false}>\r\n      { Equipos  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtIdEquipo\">\r\n                  {t('Equipos:label.idEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtidEquipo\" placeholder={t('Equipos:placeholder.idEquipo')} value={Equipos.equipo_id} className={formik.errors.txtIdEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('idEquipo', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtIdEquipo\">equipos.idEquipo</label>)}\r\n               \r\n               {formik.errors.txtIdEquipo  &&  <small id=\"txtIdEquipo-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtIdEquipo}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtNombreEquipo\">\r\n                  {t('Equipos:label.nombreEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtNombreEquipo\" placeholder={t('Equipos:placeholder.nombreEquipo')} value={Equipos.nombre} className={formik.errors.txtNombreEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombre', e.target.value)}></InputText>    \r\n                  ):(     <label id=\"txtNombreEquipo\">equipos.nombreEquipo</label>)}\r\n                  \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtSerialEquipo\">\r\n                  {t('Equipos:label.serialEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                   <InputText id=\"txtSerialEquipo\" placeholder={t('Equipos:placeholder.serialEquipo')} value={Equipos.serial} className={formik.errors.txtSerialEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('serial', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtSerialEquipo\">equipos.serialEquipo</label>)}\r\n                   \r\n            </div>   \r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtIPEquipo\">\r\n                  {t('Equipos:label.ipEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                   <InputText id=\"txtIPEquipo\" placeholder={t('Equipos:placeholder.ipEquipo')} value={Equipos.ip_equipo} className={formik.errors.txtIPEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('ip_equipo', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtIPEquipo\">equipos.ipEquipo</label>)}\r\n            </div>   \r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtLicenciaEquipo\">\r\n                  {t('Equipos:label.licenciaEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                   <InputText id=\"txtLicenciaEquipo\" placeholder={t('Equipos:placeholder.licenciaEquipo')} value={Equipos.licencia} className={formik.errors.txtLicenciaEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('licencia', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtLicenciaEquipo\">equipos.licenciaEquipo</label>)}\r\n            </div>   \r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtFechaCompra\">\r\n                  {t('Equipos:label.fechaCompra')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText value={Equipos.fecha_compra} placeholder={t('Equipos:placeholder.fechaCompra')} onChange={(e) => updateProperty('fecha_compra', e.target.value)} />\r\n               ):(    <label id=\"txtFechaCompra\">equipos.fechaCompra</label>)}\r\n               \r\n            </div>     \r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtMarcaEquipo\">\r\n                  {t('Equipos:label.marcaEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtMarcaEquipo\" placeholder={t('Equipos:placeholder.marcaEquipo')} value={Equipos.marca_id} className={formik.errors.txtMarcaEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('marca_id', e.target.value)}></InputText>    \r\n                  ):(    <label id=\"txtMarcaEquipo\">equipos.marca_id</label>)}\r\n               \r\n            </div>   \r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtCatEquipo\">\r\n                  {t('Equipos:label.categEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                 <InputText id=\"txtCatEquipo\" placeholder={t('Equipos:placeholder.categEquipo')} value={Equipos.categoria_id} className={formik.errors.txtCatEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('categoria_id', e.target.value)}></InputText>    \r\n                 ):(   <label id=\"txtCatEquipo\">equipos.categoria_id</label>)}\r\n               \r\n            </div>    \r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtRamEquipo\">\r\n                  {t('Equipos:label.ramEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtRamEquipo\" placeholder={t('Equipos:placeholder.ramEquipo')} value={Equipos.ram_id} className={formik.errors.txtRamEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('ram_id', e.target.value)}></InputText>    \r\n                  ):(     <label id=\"txtRamEquipo\">equipos.ram_id</label>)}\r\n               \r\n            </div>   \r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtDiscoEquipo\">\r\n                  {t('Equipos:label.discoEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtDiscoEquipo\" placeholder={t('Equipos:placeholder.discoEquipo')} value={Equipos.disco_id} className={formik.errors.txtDiscoEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('disco_id', e.target.value)}></InputText>    \r\n                 ):(      <label id=\"txtDiscoEquipo\">equipos.disco_id</label>)}\r\n               \r\n            </div>   \r\n            <div className=\"p-field p-col-12 p-md-4\"><label htmlFor=\"txtPantallaEquipo\">\r\n                  {t('Equipos:label.pantallaEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtPantallaEquipo\" placeholder={t('Equipos:placeholder.pantallaEquipo')} value={Equipos.pantalla_id} className={formik.errors.txtPantallaEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('pantalla_id', e.target.value)}></InputText>    \r\n                  ):(      <label id=\"txtPantallaEquipo\">equipos.pantalla_id</label>)}\r\n              \r\n\r\n            </div>  \r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtEmplEquipo\">\r\n                  {t('Equipos:label.empleadoEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n            <InputText id=\"txtEmpleadosEquipo\" placeholder={t('Equipos:placeholder.empleadoEquipo')} value={Equipos.empleado_id} className={formik.errors.txtEmpleadoEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('empleado_id', e.target.value)}></InputText>    \r\n            ):(     <label id=\"txtEmplEquipo\">equipos.empleado_id</label>)}\r\n               \r\n            </div>      \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Equipos;                                        \t\r\n\r\n\r\n","import axios from 'axios';\r\n\r\n\r\n\r\nexport default class CategoriasService {\r\n\r\n\r\n    obtenerCategoria() {\r\n        return axios.get(\"https://backliz1.herokuapp.com/category\").then(res => res.data);\r\n    }\r\n\r\n\r\n    seleccionaCategoria(pCategorias) {\r\n        let seleccionaUrl = 'https://backliz1.herokuapp.com/category'; //Modificar\r\n        console.log(pCategorias.categoria_id);\r\n        return axios.get(seleccionaUrl + '/' + pCategorias.categoria_id).then(response => response.data);\r\n    }\r\n\r\n    agregaCategoria(pCategorias) {\r\n        let agregaUrl = 'https://backliz1.herokuapp.com/category';\r\n        const params = new URLSearchParams()\r\n        params.append('nombre', pCategorias.nombre)\r\n        params.append('descripcion', pCategorias.descripcion)\r\n        const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n        return axios.post(agregaUrl, params, config).then(response => response.data);\r\n    }\r\n\r\n    actualizaCategoria(pCategorias) {\r\n        let actualizaUrl = 'https://backliz1.herokuapp.com/category'; //Modificar\r\n        const params = new URLSearchParams()\r\n        params.append('nombre', pCategorias.nombre)\r\n        params.append('descripcion', pCategorias.descripcion)\r\n        const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n        return axios.put(actualizaUrl + '/' + pCategorias.idCategoria, params, config).then(response => response.data);\r\n    }\r\n\r\n    eliminaCategoria(pCategorias) {\r\n        let eliminaUrl = 'https://backliz1.herokuapp.com/category'; //Modificar\r\n        console.log(\"asda \",pCategorias.categoria_id);\r\n        return axios.delete(eliminaUrl + '/' + pCategorias.categoria_id);\r\n    }\r\n\r\n}","import React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport CategoriasEquiposService from '../service/CategoriasEquiposService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Categorias = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstCategorias, setLstCategorias] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgCategorias, setDlgCategorias] = useState(false);\r\nconst [Categorias, setCategorias] = useState({idCategoria:null\r\n,nombre:''\r\n,descripcion:''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','CategoriasEquipos']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst categoriasService = new CategoriasEquiposService(); //MODIFICAR SERVICES\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst categoriasSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n//TextArea\r\nconst [value1, setValue1] = useState('');\r\n\r\n\r\n\r\n\r\nconst obtenerCategoria = ()   =>   { //MODIFICAR EN SERVICE\r\n   categoriasService.obtenerCategoria ().then(data => setLstCategorias(data));\r\n};\r\n\r\nconst seleccionaCategoria = (pCategoria)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\ncategoriasService.seleccionaCategoria (pCategoria).then(data => setCategorias(data));\r\nsetDlgCategorias(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerCategoria();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaCategoria = ()   =>   {\r\ncategoriasService.agregaCategoria(Categorias).then(data => {setCategorias(data);\r\ncategoriasSuccess('success',t('CategoriasEquipos:mensaje.cabecero'),t('CategoriasEquipos:mensaje.agregar'));\r\nsetDlgCategorias(false);\r\nobtenerCategoria ();\r\n});\r\n};\r\n\r\nconst eliminaCategoria = (pCategoria)   =>   {\r\ncategoriasService.eliminaCategoria (pCategoria).then(data => setCategorias(data));\r\ncategoriasSuccess('success',t('CategoriasEquipos:cabecero.exito'),t('CategoriasEquipos:mensaje.eliminar'));\r\nsetDlgCategorias(false);\r\nobtenerCategoria();\r\nobtenerCategoria();\r\nobtenerCategoria();\r\n};\r\n\r\nconst actualizaCategoria = ()   =>   {\r\ncategoriasService.actualizaCategoria(Categorias).\r\nthen(data => { setDlgCategorias(false); obtenerCategoria();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet categoriaCopy = Object.assign({}, Categorias);\r\ncategoriaCopy[propiedad] = valor;\r\nsetCategorias(categoriaCopy);\r\n};\r\n\r\nconst iniciaCategorias = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgCategorias(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetCategorias({idCategoria:null\r\n   ,nombre:''\r\n   ,descripcion:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Categorias.nombre) {\r\nerrors.txtnombre= t('CategoriasEquipos:required.nombre');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaCategoria();\r\n} else{\r\nactualizaCategoria();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()   =>   {eliminaCategoria(rowData); } }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaCategoria(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('CategoriasEquipos:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgCategorias(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('CategoriasEquipos:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaCategoria }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('CategoriasEquipos:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('CategoriasEquipos:boton.agregar')} type=\"button\" icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"CategoriasEquipos:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('CategoriasEquipos:placeholder.nombre')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('CategoriasEquipos:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaCategorias}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstCategorias} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"categoria_id\" header={t('CategoriasEquipos:label.idCategoria')} sortable={true}></Column>\r\n      <Column field=\"nombre\" header={t('CategoriasEquipos:label.nombre')} sortable={true}></Column>\r\n      <Column field=\"descripcion\" header={t('CategoriasEquipos:label.descripcion')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('CategoriasEquipos:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('CategoriasEquipos:rotulo.agregar')} footer={dlgFooter} visible={dlgCategorias} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgCategorias(false)} blockScroll={false}>\r\n      { Categorias  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtnombre\">\r\n                  {t('CategoriasEquipos:label.nombre')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtnombre\" placeholder={t('CategoriasEquipos:placeholder.nombre')} value={Categorias.nombre} className={formik.errors.txtnombre ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombre', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtnombre\">Categorias.nombre</label>)}\r\n               \r\n               {formik.errors.txtnombre  &&  <small id=\"txtnombre-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtnombre}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtdescripcion\">\r\n                  {t('CategoriasEquipos:label.descripcion')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                <InputTextarea value={Categorias.descripcion} onChange={(e) => setValue1(e.target.value)} rows={4} cols={30}placeholder={t('CategoriasEquipos:placeholder.descripcion')} onChange={(e) =>   updateProperty('descripcion', e.target.value)} />\r\n                ):(     <label id=\"txtdescripcion\">Categorias.descripcion</label>)}\r\n               \r\n            </div>\r\n                \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Categorias;","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  DiscosService {\r\n\r\nobtenerDisco (){\r\n    return axios.get(\"https://backliz1.herokuapp.com/disk\").then(res => res.data);\r\n\r\n}\r\n\r\n\r\nseleccionaDisco(pDiscos) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pDiscos.idDisco).then(response  =>  response.data);\r\n}\r\n\r\nagregaDisco (pDiscos) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/disk';\r\n    console.log(pDiscos);\r\n    const params = new URLSearchParams()\r\n    params.append('tipo',pDiscos.tipo)\r\n    params.append('capacidad',pDiscos.capacidad)\r\n    params.append('medida',pDiscos.medida)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n    }\r\n\r\neliminaDisco (pDiscos) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/disk'; //Modificar\r\n    console.log(\"asda \",pDiscos.disco_id);\r\n    return axios.delete(eliminaUrl + '/' + pDiscos.disco_id);\r\n\r\n}\r\n\r\nactualizaDisco (pDiscos) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pDiscos.idDisco,  pDiscos)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport DiscosService from '../service/DiscosService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\nconst DiscosEquipos = ()   =>   {\r\n    const  [mensaje, setMensaje] = useState({\r\n    title: '',\r\n    text: '',\r\n    icon: '',\r\n    confirmButtonText: 'Aceptar',\r\n    timer: '3000'\r\n    });\r\n    \r\n    \r\n    const [lstDiscos, setLstDiscos] = useState([]);\r\n    const [errores, setErrores] = useState([]);\r\n    const [dlgDiscos, setDlgDiscos] = useState(false);\r\n    const [Discos, setDiscos] = useState({disco_id:null\r\n    ,tipo:''\r\n    ,capacidad:''\r\n    ,medida:''\r\n    });\r\n    \r\n    const [txtCriterio, setTxtCriterio] = useState('');\r\n    const { t } = useTranslation(['translation','DiscosEquipos']);\r\n    const [captura, setCaptura] = useState(false);\r\n    const discosService = new DiscosService(); //MODIFICAR SERVICES\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const discosSuccess = (severidad,cabecero,detalle)   =>   {\r\n    let mensajeCopy = Object.assign({}, mensaje);\r\n    mensajeCopy['title'] = cabecero;\r\n    mensajeCopy['text'] = detalle;\r\n    mensajeCopy['icon'] = severidad;\r\n    setMensaje(mensajeCopy);\r\n    Swal.fire(mensajeCopy);\r\n    }\r\n    \r\n    //TextArea\r\n    const [value1, setValue1] = useState('');\r\n    \r\n    \r\n    \r\n    \r\n    const obtenerDisco = ()   =>   { //MODIFICAR EN SERVICE\r\n      discosService.obtenerDisco ().then(data => setLstDiscos(data));\r\n   };\r\n    \r\n    const seleccionaDisco = (pDiscos)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    discosService.seleccionaDisco (pDiscos).then(data => setDiscos(data));\r\n    setDlgDiscos(true);\r\n    };\r\n    \r\n    useEffect(()   =>   {\r\n    obtenerDisco();\r\n    },  [txtCriterio]);\r\n    \r\n    \r\n    const agregaDisco = ()   =>   {\r\n    discosService.agregaDisco (Discos).then(data => {setDiscos(data);\r\n    discosSuccess('success',t('DiscosEquipos:cabecero.exito'),t('DiscosEquipos:mensaje.agregar'));\r\n    setDlgDiscos(false);\r\n    obtenerDisco ();\r\n    });\r\n    };\r\n    \r\n    const eliminaDisco = (pDiscos)   =>   {\r\n      discosService.eliminaDisco (pDiscos).then(data => setDiscos(data));\r\n    discosSuccess('success',t('DiscosEquipos:cabecero.exito'),t('DiscosEquipos:mensaje.eliminar'));\r\n    setDlgDiscos(false);\r\n    obtenerDisco();\r\n    obtenerDisco();\r\n    obtenerDisco();\r\n    };\r\n    \r\n    const actualizaDisco = ()   =>   {\r\n    discosService.actualizaDisco(Discos).\r\n    then(data => { setDlgDiscos(false); obtenerDisco();});\r\n    };\r\n    \r\n    const updateProperty = (propiedad, valor)   =>  {\r\n    let discoCopy = Object.assign({}, Discos);\r\n    discoCopy[propiedad] = valor;\r\n    setDiscos(discoCopy);\r\n    };\r\n    \r\n    const iniciaDiscos = ()   =>   {\r\n    setCaptura(true);\r\n    iniciaComponentes();\r\n    setDlgDiscos(true);\r\n    };\r\n    \r\n    const iniciaComponentes = ()   =>   {\r\n    setDiscos({disco_id:null\r\n       ,tipo:''\r\n       ,capacidad:''\r\n       ,medida:''\r\n\r\n    });\r\n    formik.resetForm();\r\n    };\r\n    \r\n    /**\r\n    * Validación de las propiedades \r\n    *\r\n    */\r\n    const validate = () => {\r\n    const errors = {};\r\n     if (!Discos.tipo) {\r\n    errors.txtTipoDisco= t('DiscosEquipos:required.tipoDisco');\r\n    }\r\n    return errors;\r\n    };\r\n    \r\n    const formik = useFormik({\r\n    initialValues: {} ,\r\n    validate,\r\n    onSubmit: () => {\r\n    if(captura){\r\n    agregaDisco();\r\n    } else{\r\n    actualizaDisco();\r\n    }\r\n    },\r\n    });\r\n    \r\n    const fechaTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Moment format={t('formato.fechaHora')}>\r\n          {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n          \r\n       </Moment>\r\n    </div>);      \r\n    }\r\n    \r\n    \r\n    const actionTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaDisco(rowData);} }></Button>\r\n       <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaDisco(rowData); } }></Button>\r\n       </div>);\r\n    }\r\n    \r\n    \r\n    \r\n    const rightFooter = (\r\n    \r\n    <div className=\"p-grid p-fluid\">\r\n       <div className=\"p-col-12\">\r\n          <div className=\"p-inputgroup\"><Button tooltip={t('DiscosEquipos:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgDiscos(false) }></Button>                 \r\n             { !captura   &&  <Button tooltip={t('DiscosEquipos:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaDisco }></Button>}                 \r\n             { !captura   &&  <Button tooltip={t('DiscosEquipos:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             { captura   &&  <Button tooltip={t('DiscosEquipos:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             \r\n          </div>\r\n       </div>\r\n    </div>    \r\n    );\r\n    \r\n    const dlgFooter = \r\n    <Toolbar right={rightFooter}></Toolbar>;                 \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n    \r\n    <div>\r\n       <h1>\r\n          <Trans i18nKey=\"DiscosEquipos:entidad\"></Trans>\r\n       </h1>\r\n       <div className=\"p-grid p-fluid\">\r\n          <div className=\"p-col-12 p-md-12\">\r\n             <div className=\"p-inputgroup\">\r\n                <InputText placeholder={t('DiscosEquipos:placeholder.tipoDisco')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('DiscosEquipos:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaDiscos}></Button></div>\r\n          </div>\r\n       </div>\r\n       <DataTable value={lstDiscos} paginator={true} rows={10} responsive={true}>\r\n          <Column field=\"disco_id\" header={t('DiscosEquipos:label.idDisco')} sortable={true}></Column>\r\n          <Column field=\"tipo\" header={t('DiscosEquipos:label.tipoDisco')} sortable={true}></Column>\r\n          <Column field=\"capacidad\" header={t('DiscosEquipos:label.capacidadDisco')} sortable={true}></Column>\r\n          <Column field=\"medida\" header={t('DiscosEquipos:label.medidaDisco')} sortable={true}></Column>\r\n\r\n          <Column body={actionTemplate} header={t('DiscosEquipos:rotulo.editar')}></Column>\r\n       </DataTable>\r\n       <Dialog header={t('DiscosEquipos:rotulo.agregar')} footer={dlgFooter} visible={dlgDiscos} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgDiscos(false)} blockScroll={false}>\r\n          { Discos  &&  \r\n          <div>\r\n             <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtTipoDisco\">\r\n                      {t('DiscosEquipos:label.tipoDisco')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText id=\"txtTipoDisco\" placeholder={t('DiscosEquipos:placeholder.tipoDisco')} value={Discos.tipo} className={formik.errors.txtTipoDisco ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('tipo', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtTipoDisco\">discos.tipoDisco</label>)}\r\n                   \r\n                   {formik.errors.txtTipoDisco  &&  <small id=\"txtTipoDisco-help\" className=\"p-invalid\">\r\n                      {formik.errors.txtTipoDisco}\r\n                      </small>}                 \r\n                   \r\n                </div>\r\n                \r\n                <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtCapacidadDisco\">\r\n                      {t('DiscosEquipos:label.capacidadDisco')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText  id=\"txtCapacidadDisco\" placeholer={t('DiscosEquipos:placeholder.capacidadDisco')} value={Discos.capacidad} className={formik.errors.txtCapacidadDisco ? 'p-invalid':'p-inputtext'} onChange={(e) =>   updateProperty('capacidad', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtCapacidadDisco\">discos.capacidadCateg</label>)}\r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtMedidaDisco\">\r\n                  {t('DiscosEquipos:label.medidaDisco')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtMedidaDisco\" placeholder={t('DiscosEquipos:placeholder.medidaDisco')} value={Discos.medida} className={formik.errors.txtMedidaDisco ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('medida', e.target.value)}></InputText>    \r\n                  ):(     <label id=\"txtMedidaDisco\">discos.medidaDisco</label>)}\r\n                  \r\n            </div>\r\n                    \r\n             </div>\r\n          </div>\r\n          \r\n          }\r\n          \r\n       </Dialog>\r\n    </div>\r\n    );\r\n    \r\n    \r\n    \r\n    }                \r\n    export default DiscosEquipos;                                        \t\r\n    \r\n    \r\n    ","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  MarcasService {\r\n\r\nobtenerMarca (){\r\n    return axios.get(\"https://backliz1.herokuapp.com/mark\").then(res => res.data);\r\n}\r\n\r\n\r\nseleccionaMarca(pMarcas) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pMarcas.idMarca).then(response  =>  response.data);\r\n}\r\n\r\nagregaMarca (pMarcas) {\r\nlet agregaUrl = 'https://backliz1.herokuapp.com/mark';\r\nconsole.log(pMarcas);\r\nconst params = new URLSearchParams()\r\nparams.append('nombre',pMarcas.nombre)\r\nconst config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\nreturn axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n}\r\n\r\neliminaMarca (pMarcas) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/mark'; //Modificar\r\n    console.log(\"asda \",pMarcas.marca_id);\r\n    return axios.delete(eliminaUrl + '/' + pMarcas.marca_id);\r\n\r\n}\r\n\r\nactualizaMarca (pMarcas) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pMarcas.idMarca,  pMarcas)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport MarcasService from '../service/MarcasService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Marcas = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstMarcas, setLstMarcas] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgMarcas, setDlgMarcas] = useState(false);\r\nconst [Marcas, setMarcas] = useState({marca_id:null\r\n,nombre:''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Marcas']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst marcasService = new MarcasService(); //MODIFICAR SERVICES\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst marcasSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n//TextArea\r\nconst [value1, setValue1] = useState('');\r\n\r\n\r\n\r\n\r\nconst obtenerMarca = ()   =>   { //MODIFICAR EN SERVICE\r\nmarcasService.obtenerMarca ().then(data => setLstMarcas(data));\r\n\r\n};\r\n\r\nconst seleccionaMarca = (pCategoria)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\nmarcasService.seleccionaMarca (pCategoria).then(data => setMarcas(data));\r\nsetDlgMarcas(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerMarca();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaMarca = ()   =>   {\r\nmarcasService.agregaMarca (Marcas).\r\nthen(data => {setMarcas(data);\r\nmarcasSuccess('success',t('Marcas:cabecero.exito'),t('Marcas:mensaje.agregar'));\r\nsetDlgMarcas(false);\r\nobtenerMarca ();\r\n});\r\n};\r\n\r\nconst eliminaMarca = (pMarcas)   =>   {\r\n   marcasService.eliminaMarca (pMarcas).then(data => setMarcas(data));\r\nmarcasSuccess('success',t('Marcas:cabecero.exito'),t('Marcas:mensaje.eliminar'));\r\nsetDlgMarcas(false);\r\nobtenerMarca();\r\nobtenerMarca();\r\n};\r\n\r\nconst actualizaMarca = ()   =>   {\r\nmarcasService.actualizaMarca(Marcas).\r\nthen(data => { setDlgMarcas(false); obtenerMarca();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet marcaCopy = Object.assign({}, Marcas);\r\nmarcaCopy[propiedad] = valor;\r\nsetMarcas(marcaCopy);\r\n};\r\n\r\nconst iniciaMarcas = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgMarcas(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetMarcas({marca_id:null\r\n   ,nombre:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Marcas.nombre) {\r\nerrors.txtNombreMarca= t('Marcas:required.nombreMarca');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaMarca();\r\n} else{\r\nactualizaMarca();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaMarca(rowData);} }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaMarca(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Marcas:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgMarcas(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Marcas:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaMarca }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Marcas:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Marcas:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Marcas:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Marcas:placeholder.nombreMarca')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Marcas:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaMarcas}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstMarcas} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"marca_id\" header={t('Marcas:label.idMarca')} sortable={true}></Column>\r\n      <Column field=\"nombre\" header={t('Marcas:label.nombreMarca')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Marcas:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Marcas:rotulo.agregar')} footer={dlgFooter} visible={dlgMarcas} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgMarcas(false)} blockScroll={false}>\r\n      { Marcas  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtNombreMarca\">\r\n                  {t('Marcas:label.nombreMarca')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtNombreMarca\" placeholder={t('Marcas:placeholder.nombreMarca')} value={Marcas.nombre} className={formik.errors.txtNombreMarca ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombre', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtNombreMarca\">marcas.nombreMarca</label>)}\r\n               \r\n               {formik.errors.txtNombreMarca  &&  <small id=\"txtNombreMarca-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtNombreMarca}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            \r\n            \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Marcas;                                        \t\r\n\r\n\r\n","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  RamService {\r\n\r\nobtenerRam (pCriterio){\r\n    return axios.get(\"https://backliz1.herokuapp.com/ram\").then(res => res.data);\r\n}\r\n\r\n\r\nseleccionaRam(pRam) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pRam.idRam).then(response  =>  response.data);\r\n}\r\n\r\nagregaRam (pRam) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/ram';\r\n    console.log(pRam);\r\n    const params = new URLSearchParams()\r\n    params.append('tipo',pRam.tipo)\r\n    params.append('capacidad',pRam.capacidad)\r\n    params.append('medida',pRam.medida)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n    }\r\n\r\neliminaRam (pRam) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/ram'; //Modificar\r\n    console.log(\"asda \",pRam.ram_id);\r\n    return axios.delete(eliminaUrl + '/' + pRam.ram_id);\r\n\r\n}\r\n\r\nactualizaRam (pRam) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pRam.idRam,  pRam)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport RamService from '../service/RamService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\nconst Ram = ()   =>   {\r\n    const  [mensaje, setMensaje] = useState({\r\n    title: '',\r\n    text: '',\r\n    icon: '',\r\n    confirmButtonText: 'Aceptar',\r\n    timer: '3000'\r\n    });\r\n    \r\n    \r\n    const [lstRam, setLstRam] = useState([]);\r\n    const [errores, setErrores] = useState([]);\r\n    const [dlgRam, setDlgRam] = useState(false);\r\n    const [Ram, setRam] = useState({ram_id:null\r\n    ,tipo:''\r\n    ,capacidad:''\r\n    ,medida:''\r\n    \r\n    });\r\n    \r\n    const [txtCriterio, setTxtCriterio] = useState('');\r\n    const { t } = useTranslation(['translation','Ram']);\r\n    const [captura, setCaptura] = useState(false);\r\n    const ramService = new RamService(); //MODIFICAR SERVICES\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const ramSuccess = (severidad,cabecero,detalle)   =>   {\r\n    let mensajeCopy = Object.assign({}, mensaje);\r\n    mensajeCopy['title'] = cabecero;\r\n    mensajeCopy['text'] = detalle;\r\n    mensajeCopy['icon'] = severidad;\r\n    setMensaje(mensajeCopy);\r\n    Swal.fire(mensajeCopy);\r\n    }\r\n    \r\n   \r\n \r\n    \r\n    const obtenerRam = ()   =>   { //MODIFICAR EN SERVICE\r\n      ramService.obtenerRam ().then(data => setLstRam(data));\r\n    };\r\n    \r\n    const seleccionaRam = (pRam)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    ramService.seleccionaRam (pRam).then(data => setRam(data));\r\n    setDlgRam(true);\r\n    };\r\n    \r\n    useEffect(()   =>   {\r\n    obtenerRam();\r\n    },  [txtCriterio]);\r\n    \r\n    \r\n    const agregaRam = ()   =>   {\r\n    ramService.agregaRam (Ram).\r\n    then(data => {setRam(data);\r\n    ramSuccess('success',t('Ram:cabecero.exito'),t('Ram:mensaje.agregar'));\r\n    setDlgRam(false);\r\n    obtenerRam ();\r\n    });\r\n    };\r\n    \r\n    const eliminaRam = (pRam)   =>   {\r\n    ramService.eliminaRam (pRam).then(data => setRam(data));\r\n    ramSuccess('success',t('Ram:cabecero.exito'),t('Ram:mensaje.eliminar'));\r\n    setDlgRam(false);\r\n    obtenerRam();\r\n    obtenerRam();\r\n    obtenerRam();\r\n    };\r\n    \r\n    const actualizaRam = ()   =>   {\r\n    ramService.actualizaRam(Ram).\r\n    then(data => { setDlgRam(false); obtenerRam();});\r\n    };\r\n    \r\n    const updateProperty = (propiedad, valor)   =>  {\r\n    let ramCopy = Object.assign({}, Ram);\r\n    ramCopy[propiedad] = valor;\r\n    setRam(ramCopy);\r\n    };\r\n    \r\n    const iniciaRam = ()   =>   {\r\n    setCaptura(true);\r\n    iniciaComponentes();\r\n    setDlgRam(true);\r\n    };\r\n    \r\n    const iniciaComponentes = ()   =>   {\r\n    setRam({ram_id:null\r\n      ,tipo:''\r\n      ,capacidad:''\r\n      ,medida:''\r\n    });\r\n    formik.resetForm();\r\n    };\r\n    \r\n    /**\r\n    * Validación de las propiedades \r\n    *\r\n    */\r\n    const validate = () => {\r\n    const errors = {};\r\n     if (!Ram.tipo) {\r\n    errors.txtTipoRam= t('Ram:required.tipoRam');\r\n    }\r\n    return errors;\r\n    };\r\n    \r\n    const formik = useFormik({\r\n    initialValues: {} ,\r\n    validate,\r\n    onSubmit: () => {\r\n    if(captura){\r\n    agregaRam();\r\n    } else{\r\n    actualizaRam();\r\n    }\r\n    },\r\n    });\r\n    \r\n    const fechaTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Moment format={t('formato.fechaHora')}>\r\n          {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n          \r\n       </Moment>\r\n    </div>);      \r\n    }\r\n    \r\n    \r\n    const actionTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaRam(rowData);} }></Button>\r\n       <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaRam(rowData); } }></Button>\r\n       </div>);\r\n    }\r\n    \r\n    \r\n    \r\n    const rightFooter = (\r\n    \r\n    <div className=\"p-grid p-fluid\">\r\n       <div className=\"p-col-12\">\r\n          <div className=\"p-inputgroup\"><Button tooltip={t('Ram:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgRam(false) }></Button>                 \r\n             { !captura   &&  <Button tooltip={t('Ram:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaRam }></Button>}                 \r\n             { !captura   &&  <Button tooltip={t('Ram:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             { captura   &&  <Button tooltip={t('Ram:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             \r\n          </div>\r\n       </div>\r\n    </div>    \r\n    );\r\n    \r\n    const dlgFooter = \r\n    <Toolbar right={rightFooter}></Toolbar>;                 \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n    \r\n    <div>\r\n       <h1>\r\n          <Trans i18nKey=\"Ram:entidad\"></Trans>\r\n       </h1>\r\n       <div className=\"p-grid p-fluid\">\r\n          <div className=\"p-col-12 p-md-12\">\r\n             <div className=\"p-inputgroup\">\r\n                <InputText placeholder={t('Ram:placeholder.tipoRam')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Ram:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaRam}></Button></div>\r\n          </div>\r\n       </div>\r\n       <DataTable value={lstRam} paginator={true} rows={10} responsive={true}>\r\n          <Column field=\"ram_id\" header={t('Ram:label.idRam')} sortable={true}></Column>\r\n          <Column field=\"tipo\" header={t('Ram:label.tipoRam')} sortable={true}></Column>\r\n          <Column field=\"capacidad\" header={t('Ram:label.capacidadRam')} sortable={true}></Column>\r\n          <Column field=\"medida\" header={t('Ram:label.capacidadRam')} sortable={true}></Column>\r\n          <Column body={actionTemplate} header={t('Ram:rotulo.editar')}></Column>\r\n       </DataTable>\r\n       <Dialog header={t('Ram:rotulo.agregar')} footer={dlgFooter} visible={dlgRam} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgRam(false)} blockScroll={false}>\r\n          { Ram  &&  \r\n          <div>\r\n             <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtTipoRam\">\r\n                      {t('Ram:label.tipoRam')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText id=\"txtTipoRam\" placeholder={t('Ram:placeholder.tipoRam')} value={Ram.tipo} className={formik.errors.txtTipoRam ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('tipo', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtTipoRam\">ram.tipoRam</label>)}\r\n                   \r\n                   {formik.errors.txtTipoRam &&  <small id=\"txtTipoRam-help\" className=\"p-invalid\">\r\n                      {formik.errors.txtTipoRam}\r\n                      </small>}                 \r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtCapacidadRam\">\r\n                      {t('Ram:label.capacidadRam')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText  id=\"txtCapacidadRam\" placeholer={t('Ram:placeholder.capacidadRam')} value={Ram.capacidad} className={formik.errors.txtCapacidadRam ? 'p-invalid':'p-inputtext'}  onChange={(e) =>   updateProperty('capacidad', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtCapacidadRam\">ram.capacidadRam</label>)}\r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtmedidaRam\">\r\n                      {t('Ram:label.capacidadRam')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText  id=\"txtmedidaRam\" placeholer={t('Ram:placeholder.capacidadRam')} value={Ram.medida} className={formik.errors.txtmedidaRam ? 'p-invalid':'p-inputtext'}  onChange={(e) =>   updateProperty('medida', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtmedidaRam\">ram.capacidadRam</label>)}\r\n                   \r\n                </div>\r\n                    \r\n             </div>\r\n          </div>\r\n          \r\n          }\r\n          \r\n       </Dialog>\r\n    </div>\r\n    );\r\n    \r\n    \r\n    \r\n    }                \r\n    export default Ram;                                        \t\r\n    \r\n    \r\n    ","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  PantallasService {\r\n\r\n    obtenerPantalla (pCriterio){\r\n        return axios.get(\"https://backliz1.herokuapp.com/screen\").then(res => res.data);\r\n    }\r\n\r\n\r\n    seleccionaPantalla(pPantallas) {\r\n    let seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\n    return axios.get(seleccionaUrl  + '/' + pPantallas.idPantalla).then(response  =>  response.data);\r\n    }\r\n\r\n    agregaPantalla (pPantallas) {\r\n        let agregaUrl = 'https://backliz1.herokuapp.com/screen';\r\n        console.log(pPantallas);\r\n        const params = new URLSearchParams()\r\n        params.append('tipo',pPantallas.tipo)\r\n        params.append('tamano',pPantallas.tamano)\r\n        const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n        return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n        }\r\n\r\n    eliminaPantalla (pPantallas) {\r\n        let eliminaUrl = 'https://backliz1.herokuapp.com/screen'; //Modificar\r\n        console.log(\"asda \",pPantallas.pantalla_id);\r\n        return axios.delete(eliminaUrl + '/' + pPantallas.pantalla_id);\r\n    \r\n    }\r\n\r\n    actualizaPantalla (pPantallas) {\r\n    let actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\n    return axios.put(actualizaUrl + '/' + pPantallas.idPantalla,  pPantallas)\r\n    .then(response  =>  response.data);\r\n    }\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport PantallasService from '../service/PantallasService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\nconst Pantallas = ()   =>   {\r\n    const  [mensaje, setMensaje] = useState({\r\n    title: '',\r\n    text: '',\r\n    icon: '',\r\n    confirmButtonText: 'Aceptar',\r\n    timer: '3000'\r\n    });\r\n    \r\n    \r\n    const [lstPantallas, setLstPantallas] = useState([]);\r\n    const [errores, setErrores] = useState([]);\r\n    const [dlgPantallas, setDlgPantallas] = useState(false);\r\n    const [Pantallas, setPantallas] = useState({pantalla_id:null\r\n    ,tipo:''\r\n    ,tamano:''\r\n    \r\n    });\r\n    \r\n    const [txtCriterio, setTxtCriterio] = useState('');\r\n    const { t } = useTranslation(['translation','Pantallas']);\r\n    const [captura, setCaptura] = useState(false);\r\n    const pantallasService = new PantallasService(); //MODIFICAR SERVICES\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const pantallasSuccess = (severidad,cabecero,detalle)   =>   {\r\n    let mensajeCopy = Object.assign({}, mensaje);\r\n    mensajeCopy['title'] = cabecero;\r\n    mensajeCopy['text'] = detalle;\r\n    mensajeCopy['icon'] = severidad;\r\n    setMensaje(mensajeCopy);\r\n    Swal.fire(mensajeCopy);\r\n    }\r\n    \r\n   \r\n \r\n    \r\n    const obtenerPantalla = ()   =>   { //MODIFICAR EN SERVICE\r\n    pantallasService.obtenerPantalla ().then(data => setLstPantallas(data));\r\n    };\r\n    \r\n    const seleccionaPantalla = (pPantallas)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    pantallasService.seleccionaPantalla (pPantallas).then(data => setPantallas(data));\r\n    setDlgPantallas(true);\r\n    };\r\n    \r\n    useEffect(()   =>   {\r\n    obtenerPantalla();\r\n    },  [txtCriterio]);\r\n    \r\n    \r\n    const agregaPantalla = ()   =>   {\r\n    pantallasService.agregaPantalla (Pantallas).then(data => {setPantallas(data);\r\n    pantallasSuccess('success',t('Pantallas:cabecero.exito'),t('Pantallas:mensaje.agregar'));\r\n    setDlgPantallas(false);\r\n    obtenerPantalla ();\r\n    });\r\n    };\r\n    \r\n    const eliminaPantalla = (pPantallas)   =>   {\r\n      pantallasService.eliminaPantalla (pPantallas).then(data => setPantallas(data));\r\n    pantallasSuccess('success',t('Pantallas:cabecero.exito'),t('Pantallas:mensaje.eliminar'));\r\n    setDlgPantallas(false);\r\n    obtenerPantalla();\r\n    obtenerPantalla();\r\n    };\r\n    \r\n    const actualizaPantalla = ()   =>   {\r\n    pantallasService.actualizaPantalla(Pantallas).\r\n    then(data => { setDlgPantallas(false); obtenerPantalla();});\r\n    };\r\n    \r\n    const updateProperty = (propiedad, valor)   =>  {\r\n    let pantallaCopy = Object.assign({}, Pantallas);\r\n    pantallaCopy[propiedad] = valor;\r\n    setPantallas(pantallaCopy);\r\n    };\r\n    \r\n    const iniciaPantallas = ()   =>   {\r\n    setCaptura(true);\r\n    iniciaComponentes();\r\n    setDlgPantallas(true);\r\n    };\r\n    \r\n    const iniciaComponentes = ()   =>   {\r\n    setPantallas({pantalla_id:null\r\n       ,tipo:''\r\n       ,tamano:''\r\n    });\r\n    formik.resetForm();\r\n    };\r\n    \r\n    /**\r\n    * Validación de las propiedades \r\n    *\r\n    */\r\n    const validate = () => {\r\n    const errors = {};\r\n     if (!Pantallas.tipo) {\r\n    errors.txtTipoPantalla= t('Pantallas:required.tipoPantalla');\r\n    }\r\n    return errors;\r\n    };\r\n    \r\n    const formik = useFormik({\r\n    initialValues: {} ,\r\n    //validate,\r\n    onSubmit: () => {\r\n    if(captura){\r\n    agregaPantalla();\r\n    } else{\r\n    actualizaPantalla();\r\n    }\r\n    },\r\n    });\r\n    \r\n    const fechaTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Moment format={t('formato.fechaHora')}>\r\n          {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n          \r\n       </Moment>\r\n    </div>);      \r\n    }\r\n    \r\n    \r\n    const actionTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaPantalla(rowData);} }></Button>\r\n       <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaPantalla(rowData); } }></Button>\r\n       </div>);\r\n    }\r\n    \r\n    \r\n    \r\n    const rightFooter = (\r\n    \r\n    <div className=\"p-grid p-fluid\">\r\n       <div className=\"p-col-12\">\r\n          <div className=\"p-inputgroup\"><Button tooltip={t('Pantallas:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgPantallas(false) }></Button>                 \r\n             { !captura   &&  <Button tooltip={t('Pantallas:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaPantalla }></Button>}                 \r\n             { !captura   &&  <Button tooltip={t('Pantallas:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             { captura   &&  <Button tooltip={t('Pantallas:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             \r\n          </div>\r\n       </div>\r\n    </div>    \r\n    );\r\n    \r\n    const dlgFooter = \r\n    <Toolbar right={rightFooter}></Toolbar>;                 \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n    \r\n    <div>\r\n       <h1>\r\n          <Trans i18nKey=\"Pantallas:entidad\"></Trans>\r\n       </h1>\r\n       <div className=\"p-grid p-fluid\">\r\n          <div className=\"p-col-12 p-md-12\">\r\n             <div className=\"p-inputgroup\">\r\n                <InputText placeholder={t('Pantallas:placeholder.tipoPantalla')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Pantallas:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaPantallas}></Button></div>\r\n          </div>\r\n       </div>\r\n       <DataTable value={lstPantallas} paginator={true} rows={10} responsive={true}>\r\n          <Column field=\"pantalla_id\" header={t('Pantallas:label.idPantalla')} sortable={true}></Column>\r\n          <Column field=\"tipo\" header={t('Pantallas:label.tipoPantalla')} sortable={true}></Column>\r\n          <Column field=\"tamano\" header={t('Pantallas:label.tamPantalla')} sortable={true}></Column>\r\n          <Column body={actionTemplate} header={t('Pantallas:rotulo.editar')}></Column>\r\n       </DataTable>\r\n       <Dialog header={t('Pantallas:rotulo.agregar')} footer={dlgFooter} visible={dlgPantallas} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgPantallas(false)} blockScroll={false}>\r\n          { Pantallas  &&  \r\n          <div>\r\n             <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtTipoPantalla\">\r\n                      {t('Pantallas:label.tipoPantalla')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText id=\"txtTipoPantalla\" placeholder={t('Pantallas:placeholder.tipoPantalla')} value={Pantallas.tipo} className={formik.errors.txtTipoPantalla ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('tipo', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtTipoPantalla\">pantallas.tipoPantalla</label>)}\r\n                   \r\n                   {formik.errors.txtTipoPantalla &&  <small id=\"txtTipoPantalla-help\" className=\"p-invalid\">\r\n                      {formik.errors.txtTipoPantalla}\r\n                      </small>}                 \r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtTamPantalla\">\r\n                      {t('Pantallas:label.tamPantalla')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText  id=\"txtTamPantalla\" placeholer={t('Pantallas:placeholder.tamPantalla')} value={Pantallas.tamano} className={formik.errors.txtTamPantalla ? 'p-invalid':'p-inputtext'}  onChange={(e) =>   updateProperty('tamano', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtTamPantalla\">pantallas.tamPantalla</label>)}\r\n                   \r\n                </div>\r\n                    \r\n             </div>\r\n          </div>\r\n          \r\n          }\r\n          \r\n       </Dialog>\r\n    </div>\r\n    );\r\n    \r\n    \r\n    \r\n    }                \r\n    export default Pantallas;                                        \t\r\n    \r\n    \r\n    ","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  ServiciosService {\r\n\r\nobtenerServicio (pCriterio){\r\n    return axios.get(\"https://backliz1.herokuapp.com/service\").then(res => res.data);\r\n}\r\n\r\n\r\nseleccionaServicio(pServicios) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pServicios.idServicio).then(response  =>  response.data);\r\n}\r\n\r\nagregaServicio (pServicios) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/service';\r\n    console.log(pServicios);\r\n    const params = new URLSearchParams()\r\n    params.append('servicio', pServicios.servicio)\r\n    params.append('descripcion', pServicios.descripcion)\r\n    params.append('prioridad', pServicios.prioridad)\r\n    params.append('estado', pServicios.estado)\r\n    params.append('fecha_solicitud', pServicios.fecha_solicitud)\r\n    params.append('fecha_termino', pServicios.fecha_termino)\r\n    params.append('equipo_id', pServicios.equipo_id)\r\n    params.append('usuario_id', pServicios.usuario_id)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params, config).then(response => response.data);\r\n}\r\n\r\neliminaServicio (pServicios) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/service'; //Modificar\r\n    //console.log(\"asda \",pServicios.servicio_id);\r\n    return axios.delete(eliminaUrl + '/' + pServicios.servicio_id);\r\n\r\n}\r\n\r\nactualizaServicio (pServicios) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pServicios.idServicio,  pServicios)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","export class EquiposDatosService {\r\n\r\n    getEquipos() {\r\n        return fetch('data/equipos.json').then(res => res.json())\r\n            .then(d => d.data);\r\n    }\r\n}","export default class UsuariosDatosService {\r\n\r\n    getUsuarios() {\r\n        return fetch('data/usuarios.json').then(res => res.json())\r\n            .then(d => d.data);\r\n    }\r\n}","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\n\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport ServiciosService from '../service/ServiciosService';\r\nimport { EquiposDatosService } from '../service/EquiposDatosService';\r\nimport  EmpleadosDatosService   from '../service/EmpleadosDatosService';\r\nimport UsuariosDatosService  from '../service/UsuariosDatosService';\r\n\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\nconst Servicios = ()   =>   {\r\n    const  [mensaje, setMensaje] = useState({\r\n    title: '',\r\n    text: '',\r\n    icon: '',\r\n    confirmButtonText: 'Aceptar',\r\n    timer: '3000'\r\n    });\r\n    \r\n    //TextArea\r\n    const [value1, setValue1] = useState('');\r\n    //Autocomplete Equipos\r\n    const [equipos, setEquipos] = useState([]);\r\n    const [filteredEquipos, setFilteredEquipos] = useState(null);\r\n    const equiposDatosService = new EquiposDatosService();\r\n\r\n    const itemsEquipos = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n    useEffect(() => {\r\n        equiposDatosService.getEquipos().then(data => setEquipos(data));\r\n    }, []); \r\n    const searchEquipo = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredEquipos;\r\n            if (!event.query.trim().length) {\r\n                _filteredEquipos = [...equipos];\r\n            }\r\n            else {\r\n                _filteredEquipos = equipos.filter((equipo) => {\r\n                    return equipo.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n\r\n            setFilteredEquipos(_filteredEquipos);\r\n        }, 250);\r\n    }\r\n\r\n    const itemTemplateEquipos = (itemEquipo) => {\r\n        return (\r\n            <div className=\"equipo-item\">\r\n                <div>{itemEquipo.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n    //Autocomplete Empleados\r\n    const [empleados, setEmpleados] = useState([]);\r\n    const [filteredEmpleados, setFilteredEmpleados] = useState(null);\r\n    const empleadosDatosService = new EmpleadosDatosService();\r\n\r\n    const itemsEmpleados = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n    useEffect(() => {\r\n        empleadosDatosService.getEmpleados().then(data => setEmpleados(data));\r\n    }, []); \r\n    const searchEmpleado = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredEmpleados;\r\n            if (!event.query.trim().length) {\r\n                _filteredEmpleados = [...empleados];\r\n            }\r\n            else {\r\n                _filteredEmpleados = empleados.filter((empleado) => {\r\n                    return empleado.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n\r\n            setFilteredEmpleados(_filteredEmpleados);\r\n        }, 250);\r\n    }\r\n\t\r\n    const itemTemplateEmpleados = (itemEmpleado) => {\r\n        return (\r\n            <div className=\"empleado-item\">\r\n                <div>{itemEmpleado.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Autocomplete Usuarios\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [filteredUsuarios, setFilteredUsuarios] = useState(null);\r\n    const usuariosDatosService = new UsuariosDatosService();\r\n\r\n    const itemsUsuarios = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n    useEffect(() => {\r\n        usuariosDatosService.getUsuarios().then(data => setUsuarios(data));\r\n    }, []); \r\n    const searchUsuario = (event) => {\r\n        setTimeout(() => {\r\n            let _filteredUsuarios;\r\n            if (!event.query.trim().length) {\r\n                _filteredUsuarios = [...usuarios];\r\n            }\r\n            else {\r\n                _filteredUsuarios = usuarios.filter((empleado) => {\r\n                    return empleado.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n                });\r\n            }\r\n\r\n            setFilteredUsuarios(_filteredUsuarios);\r\n        }, 250);\r\n    }\r\n    \r\n    const itemTemplateUsuario = (itemUsuario) => {\r\n        return (\r\n            <div className=\"usuario-item\">\r\n                <div>{itemUsuario.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [lstServicios, setLstServicios] = useState([]);\r\n    const [errores, setErrores] = useState([]);\r\n    const [dlgServicios, setDlgServicios] = useState(false);\r\n    const [Servicios, setServicios] = useState({servicio_id:null\r\n        ,servicio:''\r\n        ,descripcion: ''\r\n        ,prioridad: ''\r\n        ,estado: ''\r\n        ,fecha_solicitud: ''\r\n        ,fecha_termino: ''\r\n        ,equipo_id: ''\r\n        ,usuario_id: ''\r\n\r\n    \r\n    });\r\n    \r\n    const [txtCriterio, setTxtCriterio] = useState('');\r\n    const { t } = useTranslation(['translation','Servicios']);\r\n    const [captura, setCaptura] = useState(false);\r\n    const serviciosService = new ServiciosService(); //MODIFICAR SERVICES\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    const serviciosSuccess = (severidad,cabecero,detalle)   =>   {\r\n    let mensajeCopy = Object.assign({}, mensaje);\r\n    mensajeCopy['title'] = cabecero;\r\n    mensajeCopy['text'] = detalle;\r\n    mensajeCopy['icon'] = severidad;\r\n    setMensaje(mensajeCopy);\r\n    Swal.fire(mensajeCopy);\r\n    }\r\n    \r\n   \r\n \r\n    \r\n    const obtenerServicio = ()   =>   { //MODIFICAR EN SERVICE\r\n        serviciosService.obtenerServicio ().then(data => setLstServicios(data));\r\n    };\r\n    \r\n    const seleccionaServicio = (pServicios)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    serviciosService.seleccionaServicio (pServicios).then(data => setServicios(data));\r\n    setDlgServicios(true);\r\n    };\r\n    \r\n    useEffect(()   =>   {\r\n    obtenerServicio();\r\n    },  [txtCriterio]);\r\n    \r\n    \r\n    const agregaServicio = ()   =>   {\r\n    serviciosService.agregaServicio (Servicios).then(data => {setServicios(data);\r\n    serviciosSuccess('success',t('Servicios:cabecero.exito'),t('Servicios:mensaje.agregar'));\r\n    setDlgServicios(false);\r\n    obtenerServicio ();\r\n    });\r\n    };\r\n    \r\n    const eliminaServicio = (pServicios)   =>   {\r\n        serviciosService.eliminaServicio (pServicios);\r\n    serviciosSuccess('success',t('Servicios:cabecero.exito'),t('Servicios:mensaje.eliminar'));\r\n    setDlgServicios(false);\r\n    obtenerServicio();\r\n    obtenerServicio();\r\n    };\r\n    \r\n    const actualizaServicio = ()   =>   {\r\n    serviciosService.actualizaServicio(Servicios).\r\n    then(data => { setDlgServicios(false); obtenerServicio();});\r\n    };\r\n    \r\n    const updateProperty = (propiedad, valor)   =>  {\r\n    let servicioCopy = Object.assign({}, Servicios);\r\n    servicioCopy[propiedad] = valor;\r\n    setServicios(servicioCopy);\r\n    };\r\n    \r\n    const iniciaServicios = ()   =>   {\r\n    setCaptura(true);\r\n    iniciaComponentes();\r\n    setDlgServicios(true);\r\n    };\r\n    \r\n    const iniciaComponentes = ()   =>   {\r\n    setServicios({servicio_id:null\r\n        ,servicio:''\r\n        ,descripcion: ''\r\n        ,prioridad: ''\r\n        ,estado: ''\r\n        ,fecha_solicitud: ''\r\n        ,fecha_termino: ''\r\n        ,equipo_id: ''\r\n        ,usuario_id: ''\r\n    });\r\n    formik.resetForm();\r\n    };\r\n    \r\n    /**\r\n    * Validación de las propiedades \r\n    *\r\n    */\r\n    const validate = () => {\r\n    const errors = {};\r\n     if (!Servicios.servicio) {\r\n    errors.txtNombreServicio= t('Servicios:required.nombreServicio');\r\n    }\r\n    return errors;\r\n    };\r\n    \r\n    const formik = useFormik({\r\n    initialValues: {} ,\r\n    validate,\r\n    onSubmit: () => {\r\n    if(captura){\r\n    agregaServicio();\r\n    } else{\r\n    actualizaServicio();\r\n    }\r\n    },\r\n    });\r\n    \r\n    const fechaTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Moment format={t('formato.fechaHora')}>\r\n          {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n          \r\n       </Moment>\r\n    </div>);      \r\n    }\r\n    \r\n    \r\n    const actionTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n        <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaServicio(rowData);} }></Button>\r\n        <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaServicio(rowData); } }></Button>\r\n        </div>);\r\n    }\r\n    \r\n    \r\n    \r\n    const rightFooter = (\r\n    \r\n    <div className=\"p-grid p-fluid\">\r\n       <div className=\"p-col-12\">\r\n          <div className=\"p-inputgroup\"><Button tooltip={t('Servicios:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgServicios(false) }></Button>                 \r\n             { !captura   &&  <Button tooltip={t('Servicios:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaServicio }></Button>}                 \r\n             { !captura   &&  <Button tooltip={t('Servicios:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             { captura   &&  <Button tooltip={t('Servicios:boton.agregar')} type=\"submit\" icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             \r\n          </div>\r\n       </div>\r\n    </div>    \r\n    );\r\n    \r\n    const dlgFooter = \r\n    <Toolbar right={rightFooter}></Toolbar>;                 \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n    \r\n    <div>\r\n       <h1>\r\n          <Trans i18nKey=\"Servicios:entidad\"></Trans>\r\n       </h1>                                                                                                        \r\n       <div className=\"p-grid p-fluid\">\r\n          <div className=\"p-col-12 p-md-12\">\r\n             <div className=\"p-inputgroup\">\r\n                <InputText placeholder={t('Servicios:placeholder.nombreServicio')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Servicios:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaServicios}></Button></div>\r\n          </div>\r\n       </div>\r\n      \r\n       <DataTable value={lstServicios} paginator={true} rows={10} responsive={true}>\r\n          <Column field=\"servicio_id\" header={t('Servicios:label.idServicio')} sortable={true}></Column>\r\n          <Column field=\"servicio\" header={t('Servicios:label.nombreServicio')} sortable={true}></Column>\r\n          <Column field=\"descripcion\" header={t('Servicios:label.nombreServicio')} sortable={true}></Column>\r\n          <Column field=\"prioridad\" header={t('Servicios:label.prioridadServicio')} sortable={true}></Column>\r\n          <Column field=\"estado\" header={t('Servicios:label.estadoServicio')} sortable={true}></Column>\r\n          <Column field=\"fecha_solicitud\" header={t('Servicios:label.fechaSolicitud')} sortable={true}></Column>\r\n          <Column field=\"fecha_termino\" header={t('Servicios:label.fechaTermino')} sortable={true}></Column>\r\n          <Column field=\"equipo_id\" header={t('Servicios:label.idEquipo')} sortable={true}></Column>\r\n          <Column field=\"empleado_id\" header={t('Servicios:label.idEmpleado')} sortable={true}></Column>\r\n          <Column field=\"usuario_id\" header={t('Servicios:label.idUsuario')} sortable={true}></Column>\r\n          \r\n          <Column body={actionTemplate} header={t('Servicios:rotulo.editar')}></Column>\r\n       </DataTable>\r\n       <Dialog header={t('Servicios:rotulo.agregar')} footer={dlgFooter} visible={dlgServicios} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgServicios(false)} blockScroll={false}>\r\n          { Servicios  &&  \r\n          <div>\r\n             <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtNombreServicio\">\r\n                      {t('Servicios:label.nombreServicio')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                   <InputText id=\"txtNombreServicio\" placeholder={t('Servicios:placeholder.nombreServicio')} value={Servicios.servicio} className={formik.errors.txtNombreServicio ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('servicio', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtNombreServicio\">servicios.servicio</label>)}\r\n                   \r\n                   {formik.errors.txtNombreServicio &&  <small id=\"txtNombreServicio-help\" className=\"p-invalid\">\r\n                      {formik.errors.txtNombreServicio}\r\n                      </small>}                 \r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtDescServicio\">\r\n                      {t('Servicios:label.descServicio')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                <InputTextarea value={Servicios.descripcion} onChange={(e) =>  updateProperty('descripcion', e.target.value)} rows={3} cols={20} autoResize />\r\n                ):(     <label id=\"txtDescServicio\">servicios.descripcion</label>)}\r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtPrioridadServicio\">\r\n                      {t('Servicios:label.prioridadServicio')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n           <InputText  id=\"txtPrioridadServicio\" placeholer={t('Servicios:placeholder.prioridadServicio')} value={Servicios.prioridad} className={formik.errors.txtPrioridadServicio ? 'p-invalid':'p-inputtext'}  onChange={(e) =>   updateProperty('prioridad', e.target.value)}></InputText>    \r\n           ):(    <label id=\"txtPrioridadServicio\">servicios.prioridad</label>)}\r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtEstadoServicio\">\r\n                      {t('Servicios:label.estadoServicio')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n           <InputText  id=\"txtEstadoServicio\" placeholer={t('Servicios:placeholder.estadoServicio')} value={Servicios.estado} className={formik.errors.txtEstadoServicio ? 'p-invalid':'p-inputtext'}  onChange={(e) =>   updateProperty('estado', e.target.value)}></InputText>    \r\n           ):(    <label id=\"txtEstadoServicio\">servicios.estado</label>)}\r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtFechaSolicitud\">\r\n                      {t('Servicios:label.fechaSolicitud')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                        <InputText  value={Servicios.fecha_solicitud} onChange={(e) => updateProperty('fecha_solicitud', e.target.value)} />\r\n                        ):(     <label id=\"txtFechaSolicitud\">servicios.fecha_solicitud</label>)}\r\n                   \r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtFechaTermino\">\r\n                      {t('Servicios:label.fechaTermino')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                        <InputText  value={Servicios.fecha_termino} onChange={(e) => updateProperty('fecha_termino', e.target.value)} />\r\n                        ):(     <label id=\"txtFechaTermino\">servicios.fecha_termino</label>)}\r\n                   \r\n                </div>\r\n                \r\n                <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtIdEquipo\">\r\n                      {t('Servicios:label.idEquipo')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n           <InputText  id=\"txtIdEquipo\" placeholer={t('Servicios:placeholder.idEquipo')} value={Servicios.equipo_id} className={formik.errors.txtIdEquipo ? 'p-invalid':'p-inputtext'}  onChange={(e) =>   updateProperty('equipo_id', e.target.value)}></InputText>    \r\n           ):(    <label id=\"txtIdEquipo\">servicios.equipo_id</label>)}\r\n                   \r\n                </div>\r\n                \r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtIdUsuario\">\r\n                      {t('Servicios:label.idUsuario')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n            <InputText  id=\"txtIdUsuario\" placeholer={t('Servicios:placeholder.idUsuario')} value={Servicios.usuario_id} className={formik.errors.txtIdUsuario ? 'p-invalid':'p-inputtext'}  onChange={(e) =>   updateProperty('usuario_id', e.target.value)}></InputText>    \r\n            ):(    <label id=\"txtIdUsuario\">servicios.usuario_id</label>)}\r\n                   \r\n                </div>\r\n             </div>\r\n          </div>\r\n          \r\n          }\r\n          \r\n       </Dialog>\r\n    </div>\r\n    );\r\n    \r\n    \r\n    \r\n    }                \r\n    export default Servicios;                                        \t\r\n    \r\n    \r\n    ","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  EmpleadosService {\r\n\r\nobtenerEmpleado (){\r\n    return axios.get(\"https://backliz1.herokuapp.com/employee\").then(res => res.data);\r\n}\r\n\r\n\r\nseleccionaEmpleado(pEmpleados) {\r\nlet seleccionaUrl = 'https://backliz1.herokuapp.com/employee'; //Modificar\r\nconsole.log(\"asda \",pEmpleados.empleado_id);\r\nreturn axios.get(seleccionaUrl  + '/' + pEmpleados.idEmpleado).then(response  =>  response.data);\r\n}\r\n\r\nagregaEmpleado (pEmpleados) {\r\nlet agregaUrl = 'https://backliz1.herokuapp.com/employee';\r\nconsole.log(pEmpleados);\r\nconst params = new URLSearchParams()\r\nparams.append('nombre',pEmpleados.nombre)\r\nparams.append('telefono',pEmpleados.telefono)\r\nparams.append('mail',pEmpleados.mail)\r\nparams.append('puesto',pEmpleados.puesto)\r\nparams.append('imagen',pEmpleados.imagen)\r\nparams.append('ubicacion_id',pEmpleados.ubicacion_id)\r\nparams.append('sede_id',pEmpleados.sede_id)\r\nconst config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\nreturn axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n}\r\n\r\neliminaEmpleado (pEmpleados) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/employee'; //Modificar\r\n    console.log(\"asda \",pEmpleados.empleado_id);\r\n    return axios.delete(eliminaUrl + '/' + pEmpleados.empleado_id);\r\n\r\n}\r\n\r\nactualizaEmpleado (pEmpleados) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pEmpleados.idEmpleado,  pEmpleados)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","export default class SedesDatosService {\r\n\r\n    getSedes() {\r\n        return fetch('data/sedes.json').then(res => res.json())\r\n            .then(d => d.data);\r\n    }\r\n}","export default class UnicacionesDatosService {\r\n\r\n    getUbicaciones() {\r\n        return fetch('data/ubicaciones.json').then(res => res.json())\r\n            .then(d => d.data);\r\n    }\r\n}","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\n\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { ProgressBar } from 'primereact/progressbar';\r\nimport { Tooltip } from 'primereact/tooltip';\r\nimport { Tag } from 'primereact/tag';\r\n\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport EmpleadosService from '../service/EmpleadosService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\nimport  SedesDatosService  from '../service/SedesDatosService';\r\nimport  UbicacionesDatosService  from '../service/UbicacionesDatosService';\r\n\r\n\r\nconst Empleados = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstEmpleados, setLstEmpleados] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgEmpleados, setDlgEmpleados] = useState(false);\r\nconst [Empleados, setEmpleados] = useState({empleado_id:null\r\n   ,nombre:''\r\n   ,telefono:''\r\n   ,mail:''\r\n   ,puesto:''\r\n   ,imagen:'indefinido'\r\n   ,ubicacion_id:''\r\n   ,sede_id:''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Empleados']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst empleadosService = new EmpleadosService(); //MODIFICAR SERVICES\r\n\r\n//imagen\r\nconst toast = useRef(null);\r\nconst onUpload = () => {\r\n   toast.current.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n}\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n//Autocomplete\r\nconst [ubicaciones, setUbicaciones] = useState([]);\r\nconst [selectedUbicaciones, setSelectedUbicaciones] = useState(null);\r\nconst [filteredUbicaciones, setFilteredUbicaciones] = useState(null);\r\nconst ubicacionesDatosService = new UbicacionesDatosService();\r\n\r\n\r\nconst items = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n\r\nuseEffect(() => {\r\n    ubicacionesDatosService.getUbicaciones().then(data => setUbicaciones(data));\r\n}, []); \r\n\r\nconst searchUbicacion = (event) => {\r\n    setTimeout(() => {\r\n        let _filteredUbicaciones;\r\n        if (!event.query.trim().length) {\r\n            _filteredUbicaciones = [...ubicaciones];\r\n        }\r\n        else {\r\n            _filteredUbicaciones = ubicaciones.filter((country) => {\r\n                return ubicaciones.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n            });\r\n        }\r\n\r\n        setFilteredUbicaciones(_filteredUbicaciones);\r\n    }, 250);\r\n}\r\nconst itemTemplate = (item) => {\r\n   return (\r\n       <div className=\"ubicacion-item\">\r\n           <div>{item.name}</div>\r\n       </div>\r\n   );\r\n}\r\n\r\n//Autocomplete 2\r\nconst [sedes, setSedes] = useState([]);\r\nconst [selectedSedes, setSelectedSedes] = useState(null);\r\nconst [filteredSedes, setFilteredSedes] = useState(null);\r\nconst sedesDatosService = new SedesDatosService();\r\n\r\n\r\nconst itemsSede = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n\r\nuseEffect(() => {\r\n    sedesDatosService.getSedes().then(data => setSedes(data));\r\n}, []); \r\n\r\nconst searchSede = (event) => {\r\n    setTimeout(() => {\r\n        let _filteredSedes;\r\n        if (!event.query.trim().length) {\r\n            _filteredSedes = [...sedes];\r\n        }\r\n        else {\r\n            _filteredSedes = sedes.filter((country) => {\r\n                return sedes.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n            });\r\n        }\r\n\r\n        setFilteredSedes(_filteredSedes);\r\n    }, 250);\r\n}\r\n\r\n\r\n    \r\n\r\nconst itemTemplateSedes = (item) => {\r\n    return (\r\n        <div className=\"sede-item\">\r\n            <div>{item.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst empleadosSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n\r\nconst obtenerEmpleado = ()   =>   { //MODIFICAR EN SERVICE\r\nempleadosService.obtenerEmpleado ().then(data => setLstEmpleados(data));\r\n};\r\n\r\nconst seleccionaEmpleado = (pEmpleados)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\nempleadosService.seleccionaEmpleado (pEmpleados).then(data => setEmpleados(data));\r\nsetDlgEmpleados(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerEmpleado();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaEmpleado = ()   =>   {\r\nempleadosService.agregaEmpleado (Empleados).then(data => {setEmpleados(data);\r\nempleadosSuccess('success',t('Empleados:cabecero.exito'),t('Empleados:mensaje.agregar'));\r\nsetDlgEmpleados(false);\r\nobtenerEmpleado ();\r\n});\r\n};\r\n\r\nconst eliminaEmpleado = (pEmpleados)   =>   {\r\nempleadosService.eliminaEmpleado (pEmpleados).then(data => setEmpleados(data));\r\nempleadosSuccess('success',t('Empleados:cabecero.exito'),t('Empleados:mensaje.eliminar'));\r\nsetDlgEmpleados(false);\r\nobtenerEmpleado();\r\nobtenerEmpleado();\r\nobtenerEmpleado();\r\n};\r\n\r\nconst actualizaEmpleado = ()   =>   {\r\nempleadosService.actualizaEmpleado (Empleados).\r\nthen(data => { setDlgEmpleados(false); obtenerEmpleado();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet empleadoCopy = Object.assign({}, Empleados);\r\nempleadoCopy[propiedad] = valor;\r\nsetEmpleados(empleadoCopy);\r\n};\r\n\r\nconst iniciaEmpleados = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgEmpleados(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetEmpleados({empleado_id:null\r\n   ,nombre:''\r\n   ,telefono:''\r\n   ,mail:''\r\n   ,puesto:''\r\n   ,imagen:''\r\n   ,ubicacion_id:''\r\n   ,sede_id:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Empleados.nombre) {\r\nerrors.txtNombreEmpleado= t('Empleados:required.nombreEmpleado');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaEmpleado();\r\n} else{\r\nactualizaEmpleado();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaEmpleado(rowData);} }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaEmpleado(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Empleados:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgEmpleados(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Empleados:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaEmpleado }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Empleados:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Empleados:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Empleados:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Empleados:placeholder.idEmpleado')} value={Empleados.empleado_id} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Empleados:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaEmpleados}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstEmpleados} paginator={true} rows={10} responsive={true}>\r\n   <Column field=\"imagen\" header={t('Empleados:label.imagenPerfil')} sortable={true}></Column>\r\n      <Column field=\"empleado_id\" header={t('Empleados:label.idEmpleado')} sortable={true}></Column>\r\n      <Column field=\"nombre\" header={t('Empleados:label.nombreEmpleado')} sortable={true}></Column>\r\n      <Column field=\"telefono\" header={t('Empleados:label.telefonoEmpleado')} sortable={true}></Column>\r\n      <Column field=\"mail\" header={t('Empleados:label.correoEmpleado')} sortable={true}></Column>\r\n      <Column field=\"puesto\" header={t('Empleados:label.puestoEmpleado')} sortable={true}></Column>\r\n      <Column field=\"ubicacion_id\" header={t('Empleados:label.idUbicacion')} sortable={true}></Column>\r\n      <Column field=\"sede_id\" header={t('Empleados:label.idSede')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Empleados:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Empleados:rotulo.agregar')} footer={dlgFooter} visible={dlgEmpleados} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgEmpleados(false)} blockScroll={false}>\r\n      { Empleados  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtNombreEmpleado\">\r\n                  {t('Empleados:label.nombreEmpleado')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtNombreEmpleado\" placeholder={t('Empleados:placeholder.nombreEmpleado')} value={Empleados.nombre} className={formik.errors.txtNombreEmpleado ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombre', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtNombreEmpleado\">empleados.nombreEmpleado</label>)}\r\n               \r\n               {formik.errors.txtNombreEmpleado  &&  <small id=\"txtNombreEmpleado-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtNombreEmpleado}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtTelefonoEmpleado\">\r\n                  {t('Empleados:label.telefonoEmpleado')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                  <InputText id=\"txtTelefonoEmpleado\" placeholder={t('Empleados:placeholder.telefonoEmpleado')} value={Empleados.telefono} className={formik.errors.telefono ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('telefono', e.target.value)}></InputText>    \r\n                  ):(     <label id=\"txtTelefonoEmpleado\">empleados.telefonoEmpleado</label>)}\r\n                  \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtCorreoEmpleado\">\r\n                  {t('Empleados:label.correoEmpleado')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                   <InputText id=\"txtCorreoEmpleado\" placeholder={t('Empleados:placeholder.correoEmpleado')} value={Empleados.mail} className={formik.errors.txtCorreoEmpleado ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('mail', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtCorreoEmpleado\">empleados.correoEmpleado</label>)}\r\n                   \r\n            </div>   \r\n           \r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtPuestoEmpleado\">\r\n                  {t('Empleados:label.puestoEmpleado')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                   <InputText id=\"txtPuestoEmpleado\" placeholder={t('Empleados:placeholder.puestoEmpleado')} value={Empleados.puesto} className={formik.errors.txtPuestoEmpleado ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('puesto', e.target.value)}></InputText>    \r\n                   ):(     <label id=\"txtLicenciaEquipo\">equipos.licenciaEquipo</label>)}\r\n            </div>   \r\n            \r\n\r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtIdUbicacion\">\r\n                  {t('Empleados:label.idUbicacion')}\r\n                  </label>\r\n               {{captura} ? ( \r\n            <InputText id=\"txtUbicacion_Id\" placeholder={t('Empleados:placeholder.puestoEmpleado')} value={Empleados.ubicacion_id}  maxLength={45} onChange={(e) =>   updateProperty('ubicacion_id', e.target.value)}></InputText>\r\n            ):(     <label id=\"txtIdUbicacion\">empleados.idUbicacion</label>)}\r\n               \r\n            </div>    \r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtIdSede\">\r\n                  {t('Empleados:label.idSede')}\r\n                  </label>\r\n               {{captura} ? ( \r\n            <InputText id=\"txtSede_Id\" placeholder={t('Empleados:placeholder.puestoEmpleado')} value={Empleados.sede_id}  maxLength={45} onChange={(e) =>   updateProperty('sede_id', e.target.value)}></InputText>\r\n            ):(     <label id=\"txtIdSede\">empleados.idUbicacion</label>)}\r\n               \r\n            </div> \r\n            \r\n\r\n         </div>\r\n      </div>\r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Empleados;                              \r\n\r\n","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  RolesService {\r\n\r\nobtenerRol (){\r\n    return axios.get(\"https://backliz1.herokuapp.com/role\").then(res => res.data);\r\n}\r\n\r\n\r\nseleccionaRol(pRoles) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pRoles.idRol).then(response  =>  response.data);\r\n}\r\n\r\nagregaRol (pRoles) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/role';\r\n    console.log(pRoles);\r\n    const params = new URLSearchParams()\r\n    params.append('nombre',pRoles.nombre)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n}\r\n\r\neliminaRol (pRoles) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/role'; //Modificar\r\n    console.log(\"asda \",pRoles.rol_id);\r\n    return axios.delete(eliminaUrl + '/' + pRoles.rol_id);\r\n\r\n}\r\n\r\nactualizaRol (pRoles) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pRoles.idRol,  pRoles)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport RolesService from '../service/RolesService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Roles = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstRoles, setLstRoles] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgRoles, setDlgRoles] = useState(false);\r\nconst [Roles, setRoles] = useState({rol_id:null\r\n,nombreRol:''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Roles']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst rolesService = new RolesService(); //MODIFICAR SERVICES\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst rolesSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n//TextArea\r\nconst [value1, setValue1] = useState('');\r\n\r\n\r\n\r\n\r\nconst obtenerRol = ()   =>   { //MODIFICAR EN SERVICE\r\n    rolesService.obtenerRol ().then(data => setLstRoles(data));\r\n\r\n};\r\n\r\nconst seleccionaRol = (pRoles)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    rolesService.seleccionaRol (pRoles).then(data => setRoles(data));\r\n    setDlgRoles(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerRol();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaRol = ()   =>   {\r\nrolesService.agregaRol (Roles).then(data => {setRoles(data);\r\nrolesSuccess('success',t('Roles:cabecero.exito'),t('Roles:mensaje.agregar'));\r\nsetDlgRoles(false);\r\nobtenerRol ();\r\n});\r\n};\r\n\r\nconst eliminaRol = (pRoles)   =>   {\r\nrolesService.eliminaRol (pRoles).then(data => setRoles(data));\r\nrolesSuccess('success',t('Roles:cabecero.exito'),t('Roles:mensaje.eliminar'));\r\nsetDlgRoles(false);\r\nobtenerRol();\r\nobtenerRol();\r\n};\r\n\r\nconst actualizaRol = ()   =>   {\r\nrolesService.actualizaRol(Roles).\r\nthen(data => { setDlgRoles(false); obtenerRol();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet rolCopy = Object.assign({}, Roles);\r\nrolCopy[propiedad] = valor;\r\nsetRoles(rolCopy);\r\n};\r\n\r\nconst iniciaRoles = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgRoles(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetRoles({rol_id:null\r\n   ,nombre:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Roles.nombre) {\r\nerrors.txtNombreRol= t('Roles:required.nombreRol');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaRol();\r\n} else{\r\nactualizaRol();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaRol(rowData);} }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaRol(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Roles:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgRoles(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Roles:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaRol }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Roles:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Roles:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Roles:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Roles:placeholder.nombreRol')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Roles:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaRoles}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstRoles} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"rol_id\" header={t('Roles:label.idRol')} sortable={true}></Column>\r\n      <Column field=\"nombre\" header={t('Roles:label.nombreRol')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Roles:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Roles:rotulo.agregar')} footer={dlgFooter} visible={dlgRoles} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgRoles(false)} blockScroll={false}>\r\n      { Roles  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtNombreRol\">\r\n                  {t('Roles:label.nombreRol')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtNombreRol\" placeholder={t('Roles:placeholder.nombreRol')} value={Roles.nombre} className={formik.errors.nombre ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombre', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtNombreRol\">roles.nombreRol</label>)}\r\n               \r\n               {formik.errors.txtNombreRol  &&  <small id=\"txtNombreRol-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtNombreRol}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            \r\n            \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Roles;                                        \t\r\n\r\n\r\n","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  AplicacionesEquiposService {\r\n\r\nobtenerAplicacionEq (){\r\n    return axios.get(\"https://backliz1.herokuapp.com/installation\").then(res => res.data);\r\n\r\n}\r\n\r\n\r\nseleccionaAplicacionEq(pAplicacionEqs) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pAplicacionEqs.instalacion_id).then(response  =>  response.data);\r\n}\r\n\r\nagregaAplicacionEq (pAplicacionEqs) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/installation';\r\n    console.log(pAplicacionEqs);\r\n    const params = new URLSearchParams()\r\n    params.append('fecha_instalacion',pAplicacionEqs.fecha_instalacion)\r\n    params.append('aplicacion_id',pAplicacionEqs.aplicacion_id)\r\n    params.append('equipo_id',pAplicacionEqs.equipo_id)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n    }\r\n\r\neliminaAplicacionEq (pAplicacionEqs) {\r\nlet eliminaUrl = '/expediente/tblSentidosSentencias/eliminaTblSentidosSentencias'; //Modificar\r\naxios.delete(eliminaUrl  + '/' + pAplicacionEqs.instalacion_id, {\r\nheaders: {'Content-Type': 'application/json;charset=UTF-8'},\r\ndata: pAplicacionEqs\r\n});\r\n\r\n}\r\n\r\nactualizaAplicacionEq (pAplicacionEqs) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pAplicacionEqs.instalacion_id,  pAplicacionEqs)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","export default class AplicacionesDatosService {\r\n\r\n    getAplicacionesEqs() {\r\n        return fetch('data/aplicacionesEqs.json').then(res => res.json())\r\n            .then(d => d.data);\r\n    }\r\n}","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { AutoComplete } from 'primereact/autocomplete';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport AplicacionesEquiposService from '../service/AplicacionesEquiposService';\r\nimport axios from 'axios';\r\nimport { EquiposDatosService }  from '../service/EquiposDatosService';\r\nimport  AplicacionesDatosService  from '../service/AplicacionesDatosService';\r\n\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\nconst AplicacionesEquipos = ()   =>   {\r\n    const  [mensaje, setMensaje] = useState({\r\n    title: '',\r\n    text: '',\r\n    icon: '',\r\n    confirmButtonText: 'Aceptar',\r\n    timer: '3000'\r\n    });\r\n    \r\n    \r\n    const [lstAplicacionesEqs, setLstAplicacionesEqs] = useState([]);\r\n    const [errores, setErrores] = useState([]);\r\n    const [dlgAplicacionesEqs, setDlgAplicacionesEqs] = useState(false);\r\n    const [AplicacionesEqs, setAplicacionesEqs] = useState({instalacion_id:null\r\n    ,fecha_instalacion:''\r\n    ,aplicacion_id:''\r\n    ,equipo_id:''\r\n    });\r\n    \r\n    const [txtCriterio, setTxtCriterio] = useState('');\r\n    const { t } = useTranslation(['translation','AplicacionesEquipos']);\r\n    const [captura, setCaptura] = useState(false);\r\n    const aplicacionesEqsService = new AplicacionesEquiposService(); //MODIFICAR SERVICES\r\n    \r\n    \r\n    //Autocomplete\r\nconst [equipos, setEquipos] = useState([]);\r\nconst [selectedEquipos, setSelectedEquipos] = useState(null);\r\nconst [filteredEquipos, setFilteredEquipos] = useState(null);\r\nconst equiposDatosService = new EquiposDatosService();\r\n\r\nconst itemsEquipos = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n\r\nuseEffect(() => {\r\n    equiposDatosService.getEquipos().then(data => setEquipos(data));\r\n}, []); \r\n\r\nconst searchEquipo = (event) => {\r\n    setTimeout(() => {\r\n        let _filteredEquipos;\r\n        if (!event.query.trim().length) {\r\n            _filteredEquipos = [...equipos];\r\n        }\r\n        else {\r\n            _filteredEquipos = equipos.filter((equipos) => {\r\n                return equipos.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n            });\r\n        }\r\n\r\n        setFilteredEquipos(_filteredEquipos);\r\n    }, 250);\r\n}\r\nconst itemTemplateEquipos = (item) => {\r\n   return (\r\n       <div className=\"equipo-item\">\r\n           <div>{item.name}</div>\r\n       </div>\r\n   );\r\n}\r\n\r\n//Autocomplete 2\r\nconst [aplicaciones, setAplicaciones] = useState([]);\r\nconst [selectedAplicaciones, setSelectedAplicaciones] = useState(null);\r\nconst [filteredAplicaciones, setFilteredAplicaciones] = useState(null);\r\nconst aplicacionesDatosService = new AplicacionesDatosService();\r\n\r\nconst itemsAplicacion = Array.from({ length: 100000 }).map((_, i) => ({ label: `Item #${i}`, value: i }));\r\n\r\nuseEffect(() => {\r\n    aplicacionesDatosService.getAplicacionesEqs().then(data => setAplicaciones(data));\r\n}, []); \r\n\r\nconst searchAplicacion = (event) => {\r\n    setTimeout(() => {\r\n        let _filteredAplicaciones;\r\n        if (!event.query.trim().length) {\r\n            _filteredAplicaciones = [...aplicaciones];\r\n        }\r\n        else {\r\n            _filteredAplicaciones = aplicaciones.filter((aplicaciones) => {\r\n                return aplicaciones.name.toLowerCase().startsWith(event.query.toLowerCase());\r\n            });\r\n        }\r\n\r\n        setFilteredAplicaciones(_filteredAplicaciones);\r\n    }, 250);\r\n}\r\n\r\n    \r\n\r\nconst itemTemplateAplicaciones = (item) => {\r\n    return (\r\n        <div className=\"aplicacion-item\">\r\n            <div>{item.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    const aplicacionesEqsSuccess = (severidad,cabecero,detalle)   =>   {\r\n    let mensajeCopy = Object.assign({}, mensaje);\r\n    mensajeCopy['title'] = cabecero;\r\n    mensajeCopy['text'] = detalle;\r\n    mensajeCopy['icon'] = severidad;\r\n    setMensaje(mensajeCopy);\r\n    Swal.fire(mensajeCopy);\r\n    }\r\n    \r\n    //TextArea\r\n    const [value1, setValue1] = useState('');\r\n    \r\n    \r\n    \r\n    \r\n    const obtenerAplicacionEq = ()   =>   { //MODIFICAR EN SERVICE\r\n      aplicacionesEqsService.obtenerAplicacionEq ().then(data => setLstAplicacionesEqs(data));\r\n   };\r\n    \r\n    const seleccionaAplicacionEq = (pAplicacionEq)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    aplicacionesEqsService.seleccionaAplicacionEq (pAplicacionEq).then(data => setAplicacionesEqs(data));\r\n    setDlgAplicacionesEqs(true);\r\n    };\r\n    \r\n    useEffect(()   =>   {\r\n    obtenerAplicacionEq();\r\n    },  [txtCriterio]);\r\n    \r\n    \r\n    const agregaAplicacionEq = ()   =>   {\r\n    aplicacionesEqsService.agregaAplicacionEq (AplicacionesEqs).then(data => {setAplicacionesEqs(data);\r\n    aplicacionesEqsSuccess('success',t('AplicacionesEquipos:cabecero.exito'),t('AplicacionesEquipos:mensaje.agregar'));\r\n    setDlgAplicacionesEqs(false);\r\n    obtenerAplicacionEq ();\r\n    });\r\n    };\r\n    \r\n    const eliminaAplicacionEq = ()   =>   {\r\n    AplicacionesEqs.eliminaAplicacionEq (AplicacionesEqs);\r\n    aplicacionesEqsSuccess('success',t('DiscosEquipos:cabecero.exito'),t('DiscosEquipos:mensaje.eliminar'));\r\n    setDlgAplicacionesEqs(false);\r\n    obtenerAplicacionEq();\r\n    obtenerAplicacionEq();\r\n    };\r\n    \r\n    const actualizaAplicacionEq = ()   =>   {\r\n    aplicacionesEqsService.actualizaAplicacionEq(AplicacionesEqs).\r\n    then(data => { setDlgAplicacionesEqs(false); obtenerAplicacionEq();});\r\n    };\r\n    \r\n    const updateProperty = (propiedad, valor)   =>  {\r\n    let aplicacionesEqsCopy = Object.assign({}, AplicacionesEqs);\r\n    aplicacionesEqsCopy[propiedad] = valor;\r\n    setAplicacionesEqs(aplicacionesEqsCopy);\r\n    };\r\n    \r\n    const iniciaAplicacionesEqs = ()   =>   {\r\n    setCaptura(true);\r\n    iniciaComponentes();\r\n    setDlgAplicacionesEqs(true);\r\n    };\r\n    \r\n    const iniciaComponentes = ()   =>   {\r\n    setAplicacionesEqs({instalacion_id:null\r\n        ,fecha_instalacion:''\r\n        ,aplicacion_id:''\r\n        ,equipo_id:''\r\n\r\n    });\r\n    formik.resetForm();\r\n    };\r\n    \r\n    /**\r\n    * Validación de las propiedades \r\n    *\r\n    */\r\n    const validate = () => {\r\n    const errors = {};\r\n     if (!AplicacionesEqs.txtfecha_instalacion) {\r\n    errors.txtfecha_instalacion= t('AplicacionesEquipos:required.fecha_instalacion');\r\n    }\r\n    return errors;\r\n    };\r\n    \r\n    const formik = useFormik({\r\n    initialValues: {} ,\r\n    onSubmit: () => {\r\n    if(captura){\r\n    agregaAplicacionEq();\r\n    } else{\r\n    actualizaAplicacionEq();\r\n    }\r\n    },\r\n    });\r\n    \r\n    const fechaTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div>\r\n       <Moment format={t('formato.fechaHora')}>\r\n          {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n          \r\n       </Moment>\r\n    </div>);      \r\n    }\r\n    \r\n    \r\n    const actionTemplate = (rowData, column)   =>   {\r\n    return (\r\n    <div><Button type=\"button\" icon=\"pi pi-search\" className=\"p-button-rounded\" onClick={()  =>  {seleccionaAplicacionEq(rowData);} }></Button><Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaAplicacionEq(rowData); } }></Button></div>);\r\n    }\r\n    \r\n    \r\n    \r\n    const rightFooter = (\r\n    \r\n    <div className=\"p-grid p-fluid\">\r\n       <div className=\"p-col-12\">\r\n          <div className=\"p-inputgroup\"><Button tooltip={t('AplicacionesEquipos:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgAplicacionesEqs(false) }></Button>                 \r\n             { !captura   &&  <Button tooltip={t('AplicacionesEquipos:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaAplicacionEq }></Button>}                 \r\n             { !captura   &&  <Button tooltip={t('AplicacionesEquipos:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             { captura   &&  <Button tooltip={t('AplicacionesEquipos:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n             \r\n          </div>\r\n       </div>\r\n    </div>    \r\n    );\r\n    \r\n    const dlgFooter = \r\n    <Toolbar right={rightFooter}></Toolbar>;                 \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n    \r\n    <div>\r\n       <h1>\r\n          <Trans i18nKey=\"AplicacionesEquipos:entidad\"></Trans>\r\n       </h1>\r\n       <div className=\"p-grid p-fluid\">\r\n          <div className=\"p-col-12 p-md-12\">\r\n             <div className=\"p-inputgroup\">\r\n                <InputText placeholder={t('AplicacionesEquipos:placeholder.instalacion_id')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('AplicacionesEquipos:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaAplicacionesEqs}></Button></div>\r\n          </div>\r\n       </div>\r\n       <DataTable value={lstAplicacionesEqs} paginator={true} rows={10} responsive={true}>\r\n          <Column field=\"instalacion_id\" header={t('AplicacionesEquipos:label.instalacion_id')} sortable={true}></Column>\r\n          <Column field=\"fecha_instalacion\" header={t('AplicacionesEquipos:label.fecha_instalacion')} sortable={true}></Column>\r\n          <Column field=\"aplicacion_id\" header={t('AplicacionesEquipos:label.aplicacion_id')} sortable={true}></Column>\r\n          <Column field=\"equipo_id\" header={t('AplicacionesEquipos:label.equipo_id')} sortable={true}></Column>\r\n\r\n          <Column body={actionTemplate} header={t('AplicacionesEquipos:rotulo.editar')}></Column>\r\n       </DataTable>\r\n       <Dialog header={t('AplicacionesEquipos:rotulo.agregar')} footer={dlgFooter} visible={dlgAplicacionesEqs} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgAplicacionesEqs(false)} blockScroll={false}>\r\n          { AplicacionesEqs  &&  \r\n          <div>\r\n             <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtfecha_instalacion\">\r\n                      {t('AplicacionesEquipos:label.fecha_instalacion')}\r\n                      </label>\r\n                   {{captura} ? ( \r\n                    <InputText id=\"txtfecha_instalacion\" value={AplicacionesEqs.fecha_instalacion} onChange={(e) => updateProperty('fecha_instalacion', e.target.value)}  mask=\"99/99/9999\"/>\r\n                    ):(     <label id=\"txtfecha_instalacion\">aplicacionesEqs.fecha_instalacion</label>)}\r\n               \r\n                   {formik.errors.txtfecha_instalacion  &&  <small id=\"txtfecha_instalacion-help\" className=\"p-invalid\">\r\n                      {formik.errors.txtfecha_instalacion}\r\n                      </small>}                 \r\n                   \r\n                </div>\r\n               \r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtIdEquioo\">\r\n                  {t('AplicacionesEquipos:label.idEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n            <InputText id=\"txtfecha_instalacion\" value={AplicacionesEqs.aplicacion_id} onChange={(e) => updateProperty('aplicacion_id', e.target.value)}  mask=\"99/99/9999\"/>\r\n            ):(     <label id=\"txtIdEquipo\">aplicacionesEqs.idEquipo</label>)}\r\n               \r\n            </div>  \r\n            <div className=\"p-field p-col-12 p-md-6\"><label htmlFor=\"txtaplicacion_id\">\r\n                  {t('AplicacionesEquipos:label.aplicacion_id')}\r\n                  </label>\r\n               {{captura} ? ( \r\n            <InputText id=\"txtfecha_instalacion\" value={AplicacionesEqs.equipo_id} onChange={(e) => updateProperty('equipo_id', e.target.value)}  mask=\"99/99/9999\"/>\r\n            ):(     <label id=\"txtaplicacion_ides\">aplicacionesEqs.aplicacion_id</label>)}\r\n               \r\n            </div> \r\n             </div>\r\n          </div>\r\n          \r\n          }\r\n          \r\n       </Dialog>\r\n    </div>\r\n    );\r\n    \r\n    \r\n    \r\n    }                \r\n    export default AplicacionesEquipos;                                        \t\r\n    \r\n    \r\n    ","import axios from 'axios';\r\n\r\n\r\n\r\nexport default class HistorialService {\r\n\r\n\r\n    obtenerHistorial() {\r\n        return axios.get(\"https://backliz1.herokuapp.com/record\").then(res => res.data);\r\n    }\r\n\r\n\r\n    seleccionaHistorial(pHistorial) {\r\n        let seleccionaUrl = 'https://backliz1.herokuapp.com/record'; //Modificar\r\n        console.log(pHistorial.historial_id);\r\n        return axios.get(seleccionaUrl + '/' + pHistorial.historial_id).then(response => response.data);\r\n    }\r\n\r\n    agregaHistorial(pHistorial) {\r\n        let agregaUrl = 'https://backliz1.herokuapp.com/record';\r\n        const params = new URLSearchParams()\r\n        params.append('mov_id', pHistorial.mov_id)\r\n        params.append('equipo_id', pHistorial.equipo_id)\r\n        const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n        return axios.post(agregaUrl, params, config).then(response => response.data);\r\n    }\r\n\r\n    actualizaHistorial(pHistorial) {\r\n        let actualizaUrl = 'https://backliz1.herokuapp.com/record'; //Modificar\r\n        const params = new URLSearchParams()\r\n        params.append('mov_id', pHistorial.mov_id)\r\n        params.append('equipo_id', pHistorial.equipo_id)\r\n        const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n        return axios.put(actualizaUrl + '/' + pHistorial.historial_id, params, config).then(response => response.data);\r\n    }\r\n\r\n    eliminaHistorial(pHistorial) {\r\n        let eliminaUrl = 'https://backliz1.herokuapp.com/record'; //Modificar\r\n        console.log(\"asda \",pHistorial.historial_id);\r\n        return axios.delete(eliminaUrl + '/' + pHistorial.historial_id);\r\n    }\r\n\r\n}","import React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport HistorialService from '../service/HistorialService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Historiales = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstHistoriales, setLstHistoriales] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgHistoriales, setDlgHistoriales] = useState(false);\r\nconst [Historiales, setHistoriales] = useState({historial_id:null\r\n    ,mov_id:''\r\n,equipo_id:''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Historial']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst historialService = new HistorialService(); //MODIFICAR SERVICES\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst historialSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n\r\nconst obtenerHistorial = ()   =>   { //MODIFICAR EN SERVICE\r\n   historialService.obtenerHistorial ().then(data => setLstHistoriales(data));\r\n};\r\n\r\nconst seleccionaHistorial = (pHistorial)   =>   {\r\nsetCaptura(false);\r\nformik.resetForm();\r\nhistorialService.seleccionaHistorial (pHistorial).then(data => setHistoriales(data));\r\nsetDlgHistoriales(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerHistorial();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaHistorial = ()   =>   {\r\nhistorialService.agregaHistorial(Historiales).then(data => {setHistoriales(data);\r\nhistorialSuccess('success',t('Historial:mensaje.cabecero'),t('Historial:mensaje.agregar'));\r\nsetDlgHistoriales(false);\r\nobtenerHistorial ();\r\n});\r\n};\r\n\r\nconst eliminaHistorial = (pHistorial)   =>   {\r\nhistorialService.eliminaHistorial (pHistorial).then(data => setHistoriales(data));\r\nhistorialSuccess('success',t('Historial:cabecero.exito'),t('Historial:mensaje.eliminar'));\r\nsetDlgHistoriales(false);\r\nobtenerHistorial();\r\nobtenerHistorial();\r\nobtenerHistorial();\r\n};\r\n\r\nconst actualizaHistorial = ()   =>   {\r\nhistorialService.actualizaHistorial(Historiales).\r\nthen(data => { setDlgHistoriales(false); obtenerHistorial();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet historialCopy = Object.assign({}, Historiales);\r\nhistorialCopy[propiedad] = valor;\r\nsetHistoriales(historialCopy);\r\n};\r\n\r\nconst iniciaHistoriales = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgHistoriales(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetHistoriales({historial_id:null\r\n   ,mov_id:''\r\n,equipo_id:''\r\n    \r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Historiales.mov_id) {\r\nerrors.txtIdMov= t('Historial:required.idMov');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaHistorial();\r\n} else{\r\nactualizaHistorial();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()   =>   {eliminaHistorial(rowData); } }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaHistorial(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Historial:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgHistoriales(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Historial:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaHistorial }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Historial:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Historial:boton.agregar')} type=\"button\" icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Historial:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Historial:placeholder.idEquipo')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Historial:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaHistoriales}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstHistoriales} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"historial_id\" header={t('Historial:label.idHistorial')} sortable={true}></Column>\r\n      <Column field=\"mov_id\" header={t('Historial:label.idMov')} sortable={true}></Column>\r\n      <Column field=\"equipo_id\" header={t('Historial:label.idEquipo')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Historial:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Historial:rotulo.agregar')} footer={dlgFooter} visible={dlgHistoriales} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgHistoriales(false)} blockScroll={false}>\r\n      { Historiales  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtIdMov\">\r\n                  {t('Historial:label.idMov')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtIdMov\" placeholder={t('Historial:placeholder.idMov')} value={Historiales.mov_id} className={formik.errors.txtIdMov ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('mov_id', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtIdMov\">historiales.idMov</label>)}\r\n               \r\n               {formik.errors.txtIdMov  &&  <small id=\"txtIdMov-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtIdMov}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtIdEquipo\">\r\n                  {t('Historial:label.idEquipo')}\r\n                  </label>\r\n               {{captura} ? ( \r\n                <InputText id=\"txtIdEquipo\" placeholder={t('Historial:placeholder.idEquipo')} value={Historiales.equipo_id} className={formik.errors.txtIdEquipo ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('equipo_id', e.target.value)}></InputText>    \r\n                ):(     <label id=\"txtIdEquipo\">historiales.idEquipo</label>)}\r\n                \r\n            </div>\r\n                \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Historiales;","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  UbicacionesService {\r\n\r\nobtenerUbicacion (){\r\n    return axios.get(\"https://backliz1.herokuapp.com/location\").then(res => res.data);\r\n}\r\n\r\n\r\nseleccionaUbicacion(pUbicaciones) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pUbicaciones.ubicacion_id).then(response  =>  response.data);\r\n}\r\n\r\nagregaUbicacion (pUbicaciones) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/location';\r\n    console.log(pUbicaciones);\r\n    const params = new URLSearchParams()\r\n    params.append('nombre',pUbicaciones.nombre)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n}\r\n\r\neliminaUbicacion (pUbicaciones) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/location'; //Modificar\r\n    //console.log(\"asda \",pUbicaciones.rol_id);\r\n    return axios.delete(eliminaUrl + '/' + pUbicaciones.ubicacion_id);\r\n\r\n}\r\n\r\nactualizaUbicacion (pUbicaciones) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pUbicaciones.ubicacion_id,  pUbicaciones)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport UbicacionesService from '../service/UbicacionesService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Ubicaciones = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstUbicaciones, setLstUbicaciones] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgUbicaciones, setDlgUbicaciones] = useState(false);\r\nconst [Ubicaciones, setUbicaciones] = useState({ubicacion_id:null\r\n,nombre:''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Ubicaciones']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst ubicacionesService = new UbicacionesService(); //MODIFICAR SERVICES\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ubicacionesSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n\r\n\r\n\r\nconst obtenerUbicacion= ()   =>   { //MODIFICAR EN SERVICE\r\n   ubicacionesService.obtenerUbicacion ().then(data => setLstUbicaciones(data));\r\n\r\n};\r\n\r\nconst seleccionaUbicacion = (pUbicaciones)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    ubicacionesService.seleccionaUbicacion (pUbicaciones).then(data => setUbicaciones(data));\r\n    setDlgUbicaciones(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerUbicacion();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaUbicacion = ()   =>   {\r\n   ubicacionesService.agregaUbicacion (Ubicaciones).then(data => {setUbicaciones(data);\r\n      ubicacionesSuccess('success',t('Ubicaciones:cabecero.exito'),t('Ubicaciones:mensaje.agregar'));\r\nsetDlgUbicaciones(false);\r\nobtenerUbicacion ();\r\n});\r\n};\r\n\r\nconst eliminaUbicacion = (pUbicaciones)   =>   {\r\n   ubicacionesService.eliminaUbicacion (pUbicaciones).then(data => setUbicaciones(data));\r\n   ubicacionesSuccess('success',t('Ubicaciones:cabecero.exito'),t('Ubicaciones:mensaje.eliminar'));\r\nsetDlgUbicaciones(false);\r\nobtenerUbicacion();\r\nobtenerUbicacion();\r\n};\r\n\r\nconst actualizaUbicacion = ()   =>   {\r\n   ubicacionesService.actualizaUbicacion(Ubicaciones).\r\nthen(data => { setDlgUbicaciones(false); obtenerUbicacion();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet ubicacionCopy = Object.assign({}, Ubicaciones);\r\nubicacionCopy[propiedad] = valor;\r\nsetUbicaciones(ubicacionCopy);\r\n};\r\n\r\nconst iniciaUbicaciones = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgUbicaciones(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetUbicaciones({ubicacion_id:null\r\n   ,nombre:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Ubicaciones.nombre) {\r\nerrors.txtNombreUbicacion= t('Ubicaciones:required.nombreUbicacion');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaUbicacion();\r\n} else{\r\nactualizaUbicacion();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaUbicacion(rowData);} }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaUbicacion(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Ubicaciones:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgUbicaciones(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Ubicaciones:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaUbicacion }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Ubicaciones:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Ubicaciones:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Ubicaciones:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Ubicaciones:placeholder.nombreUbicacion')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Ubicaciones:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaUbicaciones}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstUbicaciones} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"ubicacion_id\" header={t('Ubicaciones:label.idUbicacion')} sortable={true}></Column>\r\n      <Column field=\"nombre\" header={t('Ubicaciones:label.nombreUbicacion')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Ubicaciones:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Ubicaciones:rotulo.agregar')} footer={dlgFooter} visible={dlgUbicaciones} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgUbicaciones(false)} blockScroll={false}>\r\n      { Ubicaciones  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtNombreUbicacion\">\r\n                  {t('Ubicaciones:label.nombreUbicacion')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtNombreUbicacion\" placeholder={t('Ubicaciones:placeholder.nombreUbicacion')} value={Ubicaciones.nombre} className={formik.errors.txtNombreUbicacion ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombre', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtNombreUbicacion\">ubicaciones.nombre</label>)}\r\n               \r\n               {formik.errors.txtNombreUbicacion  &&  <small id=\"ttxtNombreUbicacion-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtNombreUbicacion}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            \r\n            \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Ubicaciones;                                        \t\r\n\r\n\r\n","\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class  SedesService {\r\n\r\nobtenerSede (){\r\n    return axios.get(\"https://backliz1.herokuapp.com/seat\").then(res => res.data);\r\n}\r\n\r\n\r\nseleccionaSede(pSedes) {\r\nlet seleccionaUrl = '/expediente/tblSentidosSentencias/seleccionaTblSentidosSentencias'; //Modificar\r\nreturn axios.get(seleccionaUrl  + '/' + pSedes.sede_id).then(response  =>  response.data);\r\n}\r\n\r\nagregaSede (pSedes) {\r\n    let agregaUrl = 'https://backliz1.herokuapp.com/seat';\r\n    console.log(pSedes);\r\n    const params = new URLSearchParams()\r\n    params.append('nombre',pSedes.nombre)\r\n    const config = { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n    return axios.post(agregaUrl, params,config).then(response  =>  response.data);\r\n}\r\n\r\neliminaSede (pSedes) {\r\n    let eliminaUrl = 'https://backliz1.herokuapp.com/seat'; //Modificar\r\n    //console.log(\"asda \",pSedees.rol_id);\r\n    return axios.delete(eliminaUrl + '/' + pSedes.sede_id);\r\n\r\n}\r\n\r\nactualizaSede (pSedes) {\r\nlet actualizaUrl = '/expediente/tblSentidosSentencias/actualizaTblSentidosSentencias'; //Modificar\r\nreturn axios.put(actualizaUrl + '/' + pSedes.sede_id,  pSedes)\r\n.then(response  =>  response.data);\r\n}\r\n\r\n\r\n\r\n\r\n}                \r\n\r\n\r\n","\r\nimport React, {  useEffect, useState, useRef } from 'react';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputMask } from \"primereact/inputmask\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Toolbar } from 'primereact/toolbar';\r\nimport { Column } from 'primereact/column';\r\nimport Swal from 'sweetalert2';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport SedesService from '../service/SedesService';\r\n\r\nimport { useTranslation , Trans} from 'react-i18next';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { Skeleton } from 'primereact/skeleton';\r\n\r\n\r\n\r\nconst Sedes = ()   =>   {\r\nconst  [mensaje, setMensaje] = useState({\r\ntitle: '',\r\ntext: '',\r\nicon: '',\r\nconfirmButtonText: 'Aceptar',\r\ntimer: '3000'\r\n});\r\n\r\n\r\nconst [lstSedes, setLstSedes] = useState([]);\r\nconst [errores, setErrores] = useState([]);\r\nconst [dlgSedes, setDlgSedes] = useState(false);\r\nconst [Sedes, setSedes] = useState({sede_id:null\r\n,nombreRol:''\r\n\r\n});\r\n\r\nconst [txtCriterio, setTxtCriterio] = useState('');\r\nconst { t } = useTranslation(['translation','Sedes']);\r\nconst [captura, setCaptura] = useState(false);\r\nconst sedesService = new SedesService(); //MODIFICAR SERVICES\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst sedesSuccess = (severidad,cabecero,detalle)   =>   {\r\nlet mensajeCopy = Object.assign({}, mensaje);\r\nmensajeCopy['title'] = cabecero;\r\nmensajeCopy['text'] = detalle;\r\nmensajeCopy['icon'] = severidad;\r\nsetMensaje(mensajeCopy);\r\nSwal.fire(mensajeCopy);\r\n}\r\n\r\n//TextArea\r\nconst [value1, setValue1] = useState('');\r\n\r\n\r\n\r\n\r\nconst obtenerSede = ()   =>   { //MODIFICAR EN SERVICE\r\n    sedesService.obtenerSede ().then(data => setLstSedes(data));\r\n\r\n};\r\n\r\nconst seleccionaSede = (pSedes)   =>   {\r\n    setCaptura(false);\r\n    formik.resetForm();\r\n    sedesService.seleccionaRol (pSedes).then(data => setSedes(data));\r\n    setDlgSedes(true);\r\n};\r\n\r\nuseEffect(()   =>   {\r\nobtenerSede();\r\n},  [txtCriterio]);\r\n\r\n\r\nconst agregaSede = ()   =>   {\r\nsedesService.agregaSede (Sedes).then(data => {setSedes(data);\r\nsedesSuccess('success',t('Sedes:cabecero.exito'),t('Sedes:mensaje.agregar'));\r\nsetDlgSedes(false);\r\nobtenerSede ();\r\n});\r\n};\r\n\r\nconst eliminaSede = (pSedes)   =>   {\r\nsedesService.eliminaSede (pSedes).then(data => setSedes(data));\r\nsedesSuccess('success',t('Sedes:cabecero.exito'),t('Sedes:mensaje.eliminar'));\r\nsetDlgSedes(false);\r\nobtenerSede();\r\nobtenerSede();\r\n};\r\n\r\nconst actualizaSede = ()   =>   {\r\nsedesService.actualizaSede(Sedes).\r\nthen(data => { setDlgSedes(false); obtenerSede();});\r\n};\r\n\r\nconst updateProperty = (propiedad, valor)   =>  {\r\nlet sedeCopy = Object.assign({}, Sedes);\r\nsedeCopy[propiedad] = valor;\r\nsetSedes(sedeCopy);\r\n};\r\n\r\nconst iniciaSedes = ()   =>   {\r\nsetCaptura(true);\r\niniciaComponentes();\r\nsetDlgSedes(true);\r\n};\r\n\r\nconst iniciaComponentes = ()   =>   {\r\nsetSedes({sede_id:null\r\n   ,nombre:''\r\n});\r\nformik.resetForm();\r\n};\r\n\r\n/**\r\n* Validación de las propiedades \r\n*\r\n*/\r\nconst validate = () => {\r\nconst errors = {};\r\n if (!Sedes.nombre) {\r\nerrors.txtNombreSede= t('Sedes:required.nombreSede');\r\n}\r\nreturn errors;\r\n};\r\n\r\nconst formik = useFormik({\r\ninitialValues: {} ,\r\nvalidate,\r\nonSubmit: () => {\r\nif(captura){\r\nagregaSede();\r\n} else{\r\nactualizaSede();\r\n}\r\n},\r\n});\r\n\r\nconst fechaTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Moment format={t('formato.fechaHora')}>\r\n      {rowData.fechaAlta ? rowData.fechaAlta: null}\r\n      \r\n   </Moment>\r\n</div>);      \r\n}\r\n\r\n\r\nconst actionTemplate = (rowData, column)   =>   {\r\nreturn (\r\n<div>\r\n   <Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-rounded\" onClick={()  =>  {eliminaSede(rowData);} }></Button>\r\n   <Button type=\"button\" icon=\"pi pi-pencil\" className=\"p-button-rounded\" onClick={()   =>   {seleccionaSede(rowData); } }></Button>\r\n</div>);\r\n}\r\n\r\n\r\n\r\nconst rightFooter = (\r\n\r\n<div className=\"p-grid p-fluid\">\r\n   <div className=\"p-col-12\">\r\n      <div className=\"p-inputgroup\"><Button tooltip={t('Sedes:boton.cancelar')} icon=\"pi pi-ban\" className=\"p-button-rounded\" onClick={()   =>   setDlgSedes(false) }></Button>                 \r\n         { !captura   &&  <Button tooltip={t('Sedes:boton.eliminar')} icon=\"pi pi-times\" className=\"p-button-rounded\" onClick={eliminaSede }></Button>}                 \r\n         { !captura   &&  <Button tooltip={t('Sedes:boton.actualizar')} icon=\"pi pi-undo\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         { captura   &&  <Button tooltip={t('Sedes:boton.agregar')} icon=\"pi pi-check\" className=\"p-button-rounded\" onClick={formik.handleSubmit}></Button>}                 \r\n         \r\n      </div>\r\n   </div>\r\n</div>    \r\n);\r\n\r\nconst dlgFooter = \r\n<Toolbar right={rightFooter}></Toolbar>;                 \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<div>\r\n   <h1>\r\n      <Trans i18nKey=\"Sedes:entidad\"></Trans>\r\n   </h1>\r\n   <div className=\"p-grid p-fluid\">\r\n      <div className=\"p-col-12 p-md-12\">\r\n         <div className=\"p-inputgroup\">\r\n            <InputText placeholder={t('Sedes:placeholder.nombreSede')} value={txtCriterio} onChange={(e)   =>   setTxtCriterio(e.target.value)}></InputText><Button tooltip={t('Sedes:boton.agregar')} icon=\"pi pi-plus\" onClick={iniciaSedes}></Button></div>\r\n      </div>\r\n   </div>\r\n   <DataTable value={lstSedes} paginator={true} rows={10} responsive={true}>\r\n      <Column field=\"sede_id\" header={t('Sedes:label.idSede')} sortable={true}></Column>\r\n      <Column field=\"nombre\" header={t('Sedes:label.nombreSede')} sortable={true}></Column>\r\n      <Column body={actionTemplate} header={t('Sedes:rotulo.editar')}></Column>\r\n   </DataTable>\r\n   <Dialog header={t('Sedes:rotulo.agregar')} footer={dlgFooter} visible={dlgSedes} modal={true} style={{ width: '50vw' }} onHide={(e)   =>   setDlgSedes(false)} blockScroll={false}>\r\n      { Sedes  &&  \r\n      <div>\r\n         <div className=\"p-fluid p-formgrid p-grid\">\r\n            <div className=\"p-field p-col-12 p-md-12\"><label htmlFor=\"txtNombreSede\">\r\n                  {t('Sedes:label.nombreSede')}\r\n                  </label>\r\n               {{captura} ? ( \r\n               <InputText id=\"txtNombreSede\" placeholder={t('Sedes:placeholder.nombreSede')} value={Sedes.nombre} className={formik.errors.txtNombreSede ? 'p-invalid':'p-inputtext'} maxLength={45} onChange={(e) =>   updateProperty('nombre', e.target.value)}></InputText>    \r\n               ):(     <label id=\"txtNombreSede\">sedes.nombre</label>)}\r\n               \r\n               {formik.errors.txtNombreSede  &&  <small id=\"txtNombreSede-help\" className=\"p-invalid\">\r\n                  {formik.errors.txtNombreSede}\r\n                  </small>}                 \r\n               \r\n            </div>\r\n            \r\n            \r\n         </div>\r\n      </div>\r\n      \r\n      }\r\n      \r\n   </Dialog>\r\n</div>\r\n);\r\n\r\n\r\n\r\n}                \r\nexport default Sedes;                                        \t\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport AppTopBar from './AppTopbar';\r\nimport AppFooter from './AppFooter';\r\nimport AppConfig from './AppConfig';\r\nimport AppMenu from './AppMenu';\r\nimport AppSearch from './AppSearch';\r\nimport AppRightMenu from './AppRightMenu';\r\n\r\nimport PrimeReact from 'primereact/utils';\r\nimport Indicadores from './components/Indicadores';\r\nimport Usuarios from './components/Usuarios';\r\nimport Equipos from './components/Equipos';\r\nimport CategoriasEquipos from './components/CategoriasEquipos';\r\nimport DiscosEquipos from './components/DiscosEquipos';\r\nimport Marcas from './components/Marcas';\r\nimport Ram from './components/Ram';\r\nimport Pantallas from './components/Pantallas';\r\nimport Servicios from './components/Servicios';\r\nimport Empleados from './components/Empleados';\r\nimport Roles from './components/Roles';\r\nimport AplicacionesEquipos from './components/AplicacionesEquipos';\r\nimport Historial from './components/Historial';\r\nimport Ubicaciones from './components/Ubicaciones';\r\nimport Sedes from './components/Sedes';\r\n\r\n\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport './App.scss';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [menuActive, setMenuActive] = useState(false);\r\n    const [menuMode, setMenuMode] = useState('static');\r\n    const [colorScheme, setColorScheme] = useState('dim'); //COLOR\r\n    const [menuTheme, setMenuTheme] = useState('layout-sidebar-darkgray');\r\n    const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n    const [staticMenuDesktopInactive, setStaticMenuDesktopInactive] = useState(false);\r\n    const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\r\n    const [searchActive, setSearchActive] = useState(false);\r\n    const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\r\n    const [topbarNotificationMenuActive, setTopbarNotificationMenuActive] = useState(false);\r\n    const [rightMenuActive, setRightMenuActive] = useState(false);\r\n    const [configActive, setConfigActive] = useState(false);\r\n    const [inputStyle, setInputStyle] = useState('outlined');\r\n    const [ripple, setRipple] = useState(false);\r\n\r\n\r\n\r\n    let menuClick = false;\r\n    let searchClick = false;\r\n    let userMenuClick = false;\r\n    let notificationMenuClick = false;\r\n    let rightMenuClick = false;\r\n    let configClick = false;\r\n\r\n    const menu = [\r\n        {\r\n            label: \"Usuarios/Empleados\", icon: \"pi pi-folderpi pi-fw pi-align-left\",\r\n            items: [\r\n\r\n                {label: 'Usuarios', icon: 'pi pi-folderpi pi-fw pi-align-left', to: \"/Usuarios\",\r\n                items: [\r\n                    {label: 'Usuarios', icon: '', to: \"/Usuarios\"},\r\n                    {label:'Empleados', icon:'', to:'/Empleados'}, //3\r\n                    //{label: 'Permisos', icon: '', to: \"/Permisos\"}, \r\n                    {label:'Roles', icon:'', to:'/Roles'}, //3                  \r\n                    /*{label: 'Notificaciones', icon: '', to: \"/Notificaciones\"},\r\n                    {label: 'Acuerdos', icon: '', to: \"/Acuerdos\"},\r\n                    {label: 'Notificacion Electronica', icon:'', to:\"/NotificacionElectronica\" },\r\n                    {label: 'Terminacion de Carpetas', icon:'', to:\"TerminacionCarpetas\"},\r\n                    {label: 'Oficios Generales', icon:'', to:\"/OficiosGenerales\"},\r\n                    {label: 'Juzgados', icon:'', to:\"/Juzgados\"},  */   \r\n            ]  \r\n                }\r\n            ]\r\n        },\r\n        { separator: true },\r\n        {label: \"Equipos\", icon: \"pi pi-fw pi-id-card\",\r\n        items: [\r\n            {\r\n            label: \"Equipos\", icon: \"pi pi-fw pi-align-left\",\r\n            items: [\r\n                {label: 'Aplicaciones Equipos', icon: 'keyboard_tab', to: \"/AplicacionesEquipos\"},\r\n                {label: 'Categorías Equipos', icon: 'keyboard_tab', to: \"/CategoriasEquipos\"},\r\n                {label: 'Equipos', icon: 'keyboard_tab', to: \"/Equipos\"},\r\n               {label:'Discos', icon:'', to:'/DiscosEquipos'}, //3\r\n               {label: 'Historial', icon: 'keyboard_tab', to: \"/Historial\"},\r\n               {label:'Marcas', icon:'', to:'/Marcas'}, //3\r\n               {label:'Movimientos', icon:'', to:'/Movimientos'}, //3\r\n               {label:'Pantallas', icon:'', to:'/Pantallas'}, //3\r\n               {label:'Ram', icon:'', to:'/Ram'}, //3\r\n               {label: 'Servicios', icon: 'keyboard_tab', to: \"/Servicios\"},\r\n\r\n                ]     \r\n            }\r\n            ]\r\n        },\r\n\r\n\r\n        { separator: true },\r\n        {label: \"Reportes\", icon: \"pi pi-fw pi-id-card\",\r\n        items:[\r\n            {\r\n                label: \"Reportes\", icon: \"pi pi-fw pi-align-left\",\r\n                items: [\r\n                    {label:'Generar reportes', icon:'', to:'/Reportes'}, //1\r\n                    {label:'Categorías', icon:'', to:'/Categorias'}, //2\r\n                    {label:'Indicadores', icon:'', to:'/Indicadores'}, //LISTO\r\n                    {label:'Unidades de Medida', icon:'', to:'/UnidadMEdida'}, //5\r\n             ]\r\n            }\r\n        ]\r\n\r\n        },\r\n        { separator: true },\r\n        {label: \"Otros\", icon: \"pi pi-fw pi-id-card\",\r\n        items:[\r\n            {\r\n                label: \"Otros\", icon: \"pi pi-fw pi-align-left\",\r\n                items: [\r\n                    {label:'Archivos', icon:'', to:'/Archivos'}, //1\r\n                    {label:'Aplicaciones', icon:'', to:'/Aplicaciones'}, //2\r\n                    {label:'Sedes', icon:'', to:'/Sedes'}, //3\r\n                    {label:'Ubicaciones', icon:'', to:'/Ubicaciones'}, //3\r\n\r\n             ]\r\n            }\r\n        ]\r\n\r\n        },\r\n\r\n    ];\r\n    \r\n\r\n    const routers = [\r\n\r\n\r\n        {path:'/Indicadores', component: Indicadores, meta: { breadcrumb: [{ parent: 'Operación', label: 'Indicadores' }] }},\r\n        {path:'/Usuarios', component: Usuarios, meta: { breadcrumb: [{ parent: 'Operación', label: 'Usuarios' }] }},\r\n        {path:'/Equipos', component: Equipos, meta: { breadcrumb: [{ parent: 'Operación', label: 'Equipos' }] }},\r\n        {path:'/CategoriasEquipos', component: CategoriasEquipos, meta: { breadcrumb: [{ parent: 'Operación', label: 'Categorias Equipos' }] }},\r\n        {path:'/DiscosEquipos', component: DiscosEquipos, meta: { breadcrumb: [{ parent: 'Operación', label: 'Discos Equipos' }] }},\r\n        {path:'/Marcas', component: Marcas, meta: { breadcrumb: [{ parent: 'Operación', label: 'Marcas Equipos' }] }},\r\n        {path:'/Ram', component: Ram, meta: { breadcrumb: [{ parent: 'Operación', label: 'Ram Equipos' }] }},\r\n        {path:'/Pantallas', component: Pantallas, meta: { breadcrumb: [{ parent: 'Operación', label: 'Pantallas Equipos' }] }},\r\n        {path:'/Servicios', component: Servicios, meta: { breadcrumb: [{ parent: 'Operación', label: 'Servicios de Soporte' }] }},\r\n        {path:'/Empleados', component: Empleados, meta: { breadcrumb: [{ parent: 'Operación', label: 'Empleados' }] }},\r\n        {path:'/Roles', component: Roles, meta: { breadcrumb: [{ parent: 'Operación', label: 'Roles' }] }},\r\n        {path:'/AplicacionesEquipos', component: AplicacionesEquipos, meta: { breadcrumb: [{ parent: 'Operación', label: 'Aplicaciones Equipos' }] }},\r\n        {path:'/Historial', component: Historial, meta: { breadcrumb: [{ parent: 'Operación', label: 'Historial' }] }},\r\n        {path:'/Ubicaciones', component: Ubicaciones, meta: { breadcrumb: [{ parent: 'Operación', label: 'Ubicaciones' }] }},\r\n        {path:'/Sedes', component: Sedes, meta: { breadcrumb: [{ parent: 'Operación', label: 'Sedes' }] }},\r\n\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (staticMenuMobileActive) {\r\n            blockBodyScroll();\r\n        }\r\n        else {\r\n            unblockBodyScroll();\r\n        }\r\n    }, [staticMenuMobileActive]);\r\n\r\n    const onInputStyleChange = (inputStyle) => {\r\n        setInputStyle(inputStyle);\r\n    };\r\n\r\n    const onRippleChange = (e) => {\r\n        PrimeReact.ripple = e.value;\r\n        setRipple(e.value);\r\n    };\r\n\r\n    const onDocumentClick = () => {\r\n        if (!searchClick && searchActive) {\r\n            onSearchHide();\r\n        }\r\n\r\n        if (!userMenuClick) {\r\n            setTopbarUserMenuActive(false);\r\n        }\r\n\r\n        if (!notificationMenuClick) {\r\n            setTopbarNotificationMenuActive(false);\r\n        }\r\n\r\n        if (!rightMenuClick) {\r\n            setRightMenuActive(false);\r\n        }\r\n\r\n        if (!menuClick) {\r\n            if (isSlim()) {\r\n                setMenuActive(false);\r\n            }\r\n\r\n            if (overlayMenuActive || staticMenuMobileActive) {\r\n                hideOverlayMenu();\r\n            }\r\n\r\n            unblockBodyScroll();\r\n        }\r\n\r\n        if (configActive && !configClick) {\r\n            setConfigActive(false);\r\n        }\r\n\r\n        searchClick = false;\r\n        configClick = false;\r\n        userMenuClick = false;\r\n        rightMenuClick = false;\r\n        notificationMenuClick = false;\r\n        menuClick = false;\r\n    };\r\n\r\n    const onMenuClick = () => {\r\n        menuClick = true;\r\n    };\r\n\r\n    const onMenuButtonClick = (event) => {\r\n        menuClick = true;\r\n        setTopbarUserMenuActive(false);\r\n        setTopbarNotificationMenuActive(false);\r\n        setRightMenuActive(false);\r\n\r\n        if (isOverlay()) {\r\n            setOverlayMenuActive(prevOverlayMenuActive => !prevOverlayMenuActive);\r\n        }\r\n\r\n        if (isDesktop()) {\r\n            setStaticMenuDesktopInactive(prevStaticMenuDesktopInactive => !prevStaticMenuDesktopInactive);\r\n        }\r\n        else {\r\n            setStaticMenuMobileActive(prevStaticMenuMobileActive => !prevStaticMenuMobileActive);\r\n        }\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onMenuitemClick = (event) => {\r\n        if (!event.item.items) {\r\n            hideOverlayMenu();\r\n\r\n            if (isSlim()) {\r\n                setMenuActive(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onRootMenuitemClick = () => {\r\n        setMenuActive(prevMenuActive => !prevMenuActive);\r\n    };\r\n\r\n    const onMenuThemeChange = (name) => {\r\n        setMenuTheme('layout-sidebar-' + name);\r\n    };\r\n\r\n    const onMenuModeChange = (e) => {\r\n        setMenuMode(e.value);\r\n    };\r\n\r\n    const onColorSchemeChange = (e) => {\r\n        setColorScheme(e.value);\r\n    };\r\n\r\n    const onTopbarUserMenuButtonClick = (event) => {\r\n        userMenuClick = true;\r\n        setTopbarUserMenuActive(prevTopbarUserMenuActive => !prevTopbarUserMenuActive);\r\n\r\n        hideOverlayMenu();\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onTopbarNotificationMenuButtonClick = (event) => {\r\n        notificationMenuClick = true;\r\n        setTopbarNotificationMenuActive(prevTopbarNotificationMenuActive => !prevTopbarNotificationMenuActive);\r\n\r\n        hideOverlayMenu();\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const toggleSearch = () => {\r\n        setSearchActive(prevSearchActive => !prevSearchActive);\r\n        searchClick = true;\r\n    };\r\n\r\n    const onSearchClick = () => {\r\n        searchClick = true;\r\n    };\r\n\r\n    const onSearchHide = () => {\r\n        setSearchActive(false);\r\n        searchClick = false;\r\n    };\r\n\r\n    const onRightMenuClick = () => {\r\n        rightMenuClick = true;\r\n    };\r\n\r\n    const onRightMenuButtonClick = (event) => {\r\n        rightMenuClick = true;\r\n        setRightMenuActive(prevRightMenuActive => !prevRightMenuActive);\r\n        hideOverlayMenu();\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onConfigClick = () => {\r\n        configClick = true;\r\n    };\r\n\r\n    const onConfigButtonClick = () => {\r\n        setConfigActive(prevConfigActive => !prevConfigActive);\r\n        configClick = true;\r\n    };\r\n\r\n    const hideOverlayMenu = () => {\r\n        setOverlayMenuActive(false);\r\n        setStaticMenuMobileActive(false);\r\n        unblockBodyScroll();\r\n    };\r\n\r\n    const blockBodyScroll = () => {\r\n        if (document.body.classList) {\r\n            document.body.classList.add('blocked-scroll');\r\n        }\r\n        else {\r\n            document.body.className += ' blocked-scroll';\r\n        }\r\n    };\r\n\r\n    const unblockBodyScroll = () => {\r\n        if (document.body.classList) {\r\n            document.body.classList.remove('blocked-scroll');\r\n        }\r\n        else {\r\n            document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' +\r\n                'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    };\r\n\r\n    const isSlim = () => {\r\n        return menuMode === \"slim\";\r\n    };\r\n\r\n    const isOverlay = () => {\r\n        return menuMode === \"overlay\";\r\n    };\r\n\r\n    const isDesktop = () => {\r\n        return window.innerWidth > 991;\r\n    };\r\n\r\n    const containerClassName = classNames('layout-wrapper',\r\n        {\r\n            'layout-overlay': menuMode === \"overlay\",\r\n            'layout-static': menuMode === \"static\",\r\n            'layout-slim': menuMode === \"slim\",\r\n            'layout-sidebar-dim': colorScheme === \"dim\",\r\n            'layout-sidebar-dark': colorScheme === \"dark\",\r\n            'layout-overlay-active': overlayMenuActive,\r\n            'layout-mobile-active': staticMenuMobileActive,\r\n            'layout-static-inactive': staticMenuDesktopInactive && menuMode === \"static\",\r\n            'p-input-filled': inputStyle === \"filled\",\r\n            'p-ripple-disabled': !ripple,\r\n        },\r\n        colorScheme === 'light' ? menuTheme : '');\r\n\r\n    return (\r\n        <div className={containerClassName} data-theme={colorScheme} onClick={onDocumentClick}>\r\n            <div className=\"layout-content-wrapper\">\r\n                <AppTopBar routers={routers} topbarNotificationMenuActive={topbarNotificationMenuActive} topbarUserMenuActive={topbarUserMenuActive} onMenuButtonClick={onMenuButtonClick} onSearchClick={toggleSearch}\r\n                    onTopbarNotification={onTopbarNotificationMenuButtonClick} onTopbarUserMenu={onTopbarUserMenuButtonClick} onRightMenuClick={onRightMenuButtonClick} onRightMenuButtonClick={onRightMenuButtonClick}></AppTopBar>\r\n\r\n                <div className=\"layout-content\">\r\n                    {\r\n                        routers.map((router, index) => {\r\n                            if (router.exact) {\r\n                                return <Route key={`router${index}`} path={router.path} exact component={router.component} />\r\n                            }\r\n\r\n                            return <Route key={`router${index}`} path={router.path} component={router.component} />\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <AppFooter />\r\n            </div>\r\n\r\n            <AppMenu model={menu} menuMode={menuMode} active={menuActive} mobileMenuActive={staticMenuMobileActive} onMenuClick={onMenuClick} onMenuitemClick={onMenuitemClick} onRootMenuitemClick={onRootMenuitemClick}></AppMenu>\r\n\r\n            <AppRightMenu rightMenuActive={rightMenuActive} onRightMenuClick={onRightMenuClick}></AppRightMenu>\r\n\r\n            <AppConfig configActive={configActive} menuMode={menuMode} onMenuModeChange={onMenuModeChange} menuTheme={menuTheme} onMenuThemeChange={onMenuThemeChange}\r\n                colorScheme={colorScheme} onColorSchemeChange={onColorSchemeChange} onConfigClick={onConfigClick} onConfigButtonClick={onConfigButtonClick}\r\n                rippleActive={ripple} onRippleChange={onRippleChange} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}></AppConfig>\r\n\r\n            <AppSearch searchActive={searchActive} onSearchClick={onSearchClick} onSearchHide={onSearchHide} />\r\n\r\n            <div className=\"layout-mask modal-in\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\n\r\nexport const Login = () => {\r\n\r\n    return (\r\n        <div className=\"login-body\">\r\n            <div className=\"login-wrapper\">\r\n                <div className=\"login-panel\">\r\n                    <img src=\"assets/layout/images/logo-dark.svg\" className=\"logo\" alt=\"diamond-layout\" />\r\n\r\n                    <div className=\"login-form\">\r\n                        <h2>Create Your Free Account</h2>\r\n                        <p>Already have an account? <a href=\"/\">Login</a></p>\r\n                        <InputText placeholder=\"Full Name\" />\r\n                        <InputText placeholder=\"Email\" />\r\n                        <Password placeholder=\"Password\" />\r\n                        <Button label=\"CONTINUE\" type=\"button\"></Button>\r\n                    </div>\r\n\r\n                    <p>A problem? <a href=\"/\">Click here</a> and let us help you.</p>\r\n                </div>\r\n                <div className=\"login-image\">\r\n                    <div className=\"login-image-content\">\r\n                        <h1>Access to your</h1>\r\n                        <h1>Diamond</h1>\r\n                        <h1>Account</h1>\r\n                        <h3>\r\n                            Lorem ipsum dolor sit amet, consectetur <br />\r\n\t\t\t\t\t\tadipiscing elit. Donec posuere velit nec enim <br />\r\n\t\t\t\t\t\tsodales, nec placerat erat tincidunt.\r\n\t\t\t\t\t</h3>\r\n                    </div>\r\n                    <div className=\"image-footer\">\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                        <div className=\"icons\">\r\n                            <i className=\"pi pi-github\"></i>\r\n                            <i className=\"pi pi-twitter\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Error = () => {\r\n\r\n    return (\r\n        <div className=\"exception-body error\">\r\n            <img src=\"assets/layout/images/logo-white.svg\" alt=\"diamond-layout\" className=\"logo\" />\r\n\r\n            <div className=\"exception-content\">\r\n                <div className=\"exception-title\">ERROR</div>\r\n                <div className=\"exception-detail\">Something went wrong.</div>\r\n                <Link to=\"/\">Go to Dashboard</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NotFound = () => {\r\n\r\n    return (\r\n        <div className=\"exception-body notfound\">\r\n            <img src=\"assets/layout/images/logo-white.svg\" alt=\"diamond-layout\" className=\"logo\" />\r\n\r\n            <div className=\"exception-content\">\r\n                <div className=\"exception-title\">NOT FOUND</div>\r\n                <div className=\"exception-detail\">Requested resource is not available.</div>\r\n                <Link to=\"/\">Go to Dashboard</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Access = () => {\r\n    return (\r\n        <div className=\"exception-body access\">\r\n            <img src=\"assets/layout/images/logo-white.svg\" alt=\"diamond-layout\" className=\"logo\" />\r\n\r\n            <div className=\"exception-content\">\r\n                <div className=\"exception-title\">ACCESS DENIED</div>\r\n                <div className=\"exception-detail\">You do not have the necessary permissions.</div>\r\n                <Link to=\"/\">Go to Dashboard</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Route, useLocation, withRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { Login } from './pages/Login';\r\nimport { Error } from './pages/Error';\r\nimport { NotFound } from './pages/NotFound';\r\nimport { Access } from './pages/Access';\r\n\r\nconst AppWrapper = () => {\r\n\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [location]);\r\n\r\n    switch (location.pathname) {\r\n        case '/login':\r\n            return <Route path=\"/login\" component={Login} />\r\n        case '/error':\r\n            return <Route path=\"/error\" component={Error} />\r\n        case '/notfound':\r\n            return <Route path=\"/notfound\" component={NotFound} />\r\n        case '/access':\r\n            return <Route path=\"/access\" component={Access} />\r\n        default:\r\n            return <App />;\r\n    }\r\n}\r\n\r\nexport default withRouter(AppWrapper);\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n \r\nimport Backend from 'i18next-xhr-backend';\r\n \r\ni18n\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // connect with React\r\n  .use(initReactI18next)\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    debug: true,\r\n    react: {\r\n      useSuspense: false\r\n    },\r\n \r\n    lng: 'es',\r\n    fallbackLng: 'es',\r\n    whitelist: ['es', 'en'],\r\n \r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n\r\n    backend: {\r\n        loadPath: '/locales/{{lng}}/{{ns}}.json',\r\n      },    \r\n\r\n  });\r\n \r\nexport default i18n;","import 'react-app-polyfill/ie11';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport AppWrapper from './AppWrapper';\r\nimport './i18n';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <AppWrapper />\r\n    </HashRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}